<?xml version="1.0" encoding="utf-8" ?>
<helpItems xmlns="http://msh" schema="maml">
	<!--Edited with: SAPIEN PowerShell HelpWriter 2015 v1.0.11-->
	<!--Generated by: SAPIEN PowerShell HelpWriter 2015 v1.0.11-->
	<!--All Commands-->
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>ConvertTo-ForensicTimeline</command:name>
			<maml:description>
				<maml:para>Converts an object to a ForensicTimeline object.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>ConvertTo</command:verb>
			<command:noun>ForensicTimeline</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>The ConverTo-ForensicTimeline cmdlet receives a PowerForensic object and formats it to a common ForensicTimeline object.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>ConvertTo-ForensicTimeline</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="named" aliases="">
					<maml:name>InputObject</maml:name>
					<maml:description>
						<maml:para>Object to be converted to a ForensicTimeline object.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">PSObject</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="named" aliases="">
				<maml:name>InputObject</maml:name>
				<maml:description>
					<maml:para>Object to be converted to a ForensicTimeline object.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSObject</command:parameterValue>
				<dev:type>
					<maml:name>PSObject</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.Management.Automation.PSObject</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para/>
				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<maml:description>
					<maml:para/>
				</maml:description>
				<dev:type>
					<maml:name>PowerForensics.Formats.ForensicTimeline</maml:name>
					<maml:uri/>
				</dev:type>
			</command:returnValue>
		</command:returnValues>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt; </maml:para>
				</maml:introduction>
				<dev:code>Get-FileRecord 24212 | ConvertTo-ForensicTimeline

Date         : 8/22/2013 3:35:48 AM
ActivityType : M...
Source       : MFT
SourceType   :
User         :
FileName     : C:\Windows\notepad.exe
Description  : [208896] C:\Windows\notepad.exe

Date         : 8/22/2013 3:35:49 AM
ActivityType : .A.B
Source       : MFT
SourceType   :
User         :
FileName     : C:\Windows\notepad.exe
Description  : [208896] C:\Windows\notepad.exe

Date         : 9/10/2014 2:45:22 AM
ActivityType : ..C.
Source       : MFT
SourceType   :
User         :
FileName     : C:\Windows\notepad.exe
Description  : [208896] C:\Windows\notepad.exe</dev:code>
				<dev:remarks>
					<maml:para>This example shows a FileRecord object being converted to multiple ForensicTimeline objects. A ForensicTimeline object will be created for each unique timestamp.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Copy-FileRaw</command:name>
			<maml:description>
				<maml:para>Copy a file from its raw bytes on disk.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Copy</command:verb>
			<command:noun>FileRaw</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>The Copy-FileRaw cmdlet parses the Master File Table to determine the location of the specified file&apos;s data/contents. The raw bytes are then copied to the location specified by the Destination parameter. This cmdlet bypasses NTFS Permissions and Operating System locks.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Copy-FileRaw</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="FullName">
					<maml:name>Path</maml:name>
					<maml:description>
						<maml:para>The file to copy.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
					<maml:name>Destination</maml:name>
					<maml:description>
						<maml:para>Where the file is to be copied.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
			<command:syntaxItem>
				<maml:name>Copy-FileRaw</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="">
					<maml:name>Index</maml:name>
					<maml:description>
						<maml:para>The Master File Table (MFT) index number of the target file. This parameter is particularly useful for copying deleted files that maintain an entry in the MFT, but cannot be referenced by path.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
					<maml:name>Destination</maml:name>
					<maml:description>
						<maml:para>Where the file is to be copied.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>VolumeName</maml:name>
					<maml:description>
						<maml:para>The name of the Volume or Logical Partition (Ex. \\.\C:, \\.\HARDDISKVOLUME1, or C).</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
					<dev:defaultValue>\\.\C:</dev:defaultValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="FullName">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>The file to copy.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
				<maml:name>Destination</maml:name>
				<maml:description>
					<maml:para>Where the file is to be copied.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="">
				<maml:name>Index</maml:name>
				<maml:description>
					<maml:para>The Master File Table (MFT) index number of the target file. This parameter is particularly useful for copying deleted files that maintain an entry in the MFT, but cannot be referenced by path.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
				<dev:type>
					<maml:name>Int32</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>VolumeName</maml:name>
				<maml:description>
					<maml:para>The name of the Volume or Logical Partition (Ex. \\.\C:, \\.\HARDDISKVOLUME1, or C).</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>\\.\C:</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>None</maml:name>
					<maml:uri/>
				</dev:type>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>None</maml:name>
					<maml:uri/>
				</dev:type>
			</command:returnValue>
		</command:returnValues>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Copy-Item C:\Windows\System32\config\SAM C:\Users\Public\Desktop\SAM

Copy-Item : The process cannot access the file &apos;C:\Windows\System32\config\SAM&apos; because it is being used by another process.
At line:1 char:1
+ Copy-Item C:\Windows\System32\config\SAM C:\Users\Public\Desktop\SAM
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [Copy-Item], IOException
    + FullyQualifiedErrorId : System.IO.IOException,Microsoft.PowerShell.Commands.CopyItemCommand


PS C:\&gt; Copy-FileRaw C:\Windows\System32\config\SAM C:\Users\Public\Desktop\SAM</dev:code>
				<dev:remarks>
					<maml:para>This example copied the SAM Registry hive (a locked file) to the Public user&apos;s desktop. It also showed that this file cannot be copied by the Copy-Item cmdlet.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Format-Hex</command:name>
			<maml:description>
				<maml:para>Formats output as a hex dump.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Format</command:verb>
			<command:noun>Hex</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>The Format-Hex cmdlet takes a byte array and formats it to a hex dump.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Format-Hex</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="named" aliases="">
					<maml:name>Bytes</maml:name>
					<maml:description>
						<maml:para>Byte array to be formatted to a hex dump.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">Byte</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="named" aliases="">
				<maml:name>Bytes</maml:name>
				<maml:description>
					<maml:para>Byte array to be formatted to a hex dump.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Byte</command:parameterValue>
				<dev:type>
					<maml:name>Byte</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<maml:description>
					<maml:para/>
				</maml:description>
				<dev:type>
					<maml:name>System.Byte[]</maml:name>
					<maml:uri/>
				</dev:type>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<maml:description>
					<maml:para/>
				</maml:description>
				<dev:type>
					<maml:name>PowerForensics.Formats.HexDump</maml:name>
					<maml:uri/>
				</dev:type>
			</command:returnValue>
		</command:returnValues>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-MBR -Path \\.\PHYSICALDRIVE2 -AsBytes | Format-Hex

Offset     _00_01_02_03_04_05_06_07_08_09_0A_0B_0C_0D_0E_0F  Ascii           
------     ------------------------------------------------  -----           
0x00000000  33 C0 8E D0 BC 00 7C 8E C0 8E D8 BE 00 7C BF 00  3.....|......|..
0x00000010  06 B9 00 02 FC F3 A4 50 68 1C 06 CB FB B9 04 00  .......Ph.......
0x00000020  BD BE 07 80 7E 00 00 7C 0B 0F 85 0E 01 83 C5 10  ....~..|........
0x00000030  E2 F1 CD 18 88 56 00 55 C6 46 11 05 C6 46 10 00  .....V.U.F...F..
0x00000040  B4 41 BB AA 55 CD 13 5D 72 0F 81 FB 55 AA 75 09  .A..U..]r...U.u.
0x00000050  F7 C1 01 00 74 03 FE 46 10 66 60 80 7E 10 00 74  ....t..F.f`.~..t
0x00000060  26 66 68 00 00 00 00 66 FF 76 08 68 00 00 68 00  &amp;fh....f.v.h..h.
0x00000070  7C 68 01 00 68 10 00 B4 42 8A 56 00 8B F4 CD 13  |h..h...B.V.....
0x00000080  9F 83 C4 10 9E EB 14 B8 01 02 BB 00 7C 8A 56 00  ............|.V.
0x00000090  8A 76 01 8A 4E 02 8A 6E 03 CD 13 66 61 73 1C FE  .v..N..n...fas..
0x000000A0  4E 11 75 0C 80 7E 00 80 0F 84 8A 00 B2 80 EB 84  N.u..~..........
0x000000B0  55 32 E4 8A 56 00 CD 13 5D EB 9E 81 3E FE 7D 55  U2..V...]...&gt;.}U
0x000000C0  AA 75 6E FF 76 00 E8 8D 00 75 17 FA B0 D1 E6 64  .un.v....u.....d
0x000000D0  E8 83 00 B0 DF E6 60 E8 7C 00 B0 FF E6 64 E8 75  ......`.|....d.u
0x000000E0  00 FB B8 00 BB CD 1A 66 23 C0 75 3B 66 81 FB 54  .......f#.u;f..T
0x000000F0  43 50 41 75 32 81 F9 02 01 72 2C 66 68 07 BB 00  CPAu2....r,fh...
0x00000100  00 66 68 00 02 00 00 66 68 08 00 00 00 66 53 66  .fh....fh....fSf
0x00000110  53 66 55 66 68 00 00 00 00 66 68 00 7C 00 00 66  SfUfh....fh.|..f
0x00000120  61 68 00 00 07 CD 1A 5A 32 F6 EA 00 7C 00 00 CD  ah.....Z2...|...
0x00000130  18 A0 B7 07 EB 08 A0 B6 07 EB 03 A0 B5 07 32 E4  ..............2.
0x00000140  05 00 07 8B F0 AC 3C 00 74 09 BB 07 00 B4 0E CD  ......&lt;.t.......
0x00000150  10 EB F2 F4 EB FD 2B C9 E4 64 EB 00 24 02 E0 F8  ......+..d..$...
0x00000160  24 02 C3 49 6E 76 61 6C 69 64 20 70 61 72 74 69  $..Invalid parti
0x00000170  74 69 6F 6E 20 74 61 62 6C 65 00 45 72 72 6F 72  tion table.Error
0x00000180  20 6C 6F 61 64 69 6E 67 20 6F 70 65 72 61 74 69   loading operati
0x00000190  6E 67 20 73 79 73 74 65 6D 00 4D 69 73 73 69 6E  ng system.Missin
0x000001A0  67 20 6F 70 65 72 61 74 69 6E 67 20 73 79 73 74  g operating syst
0x000001B0  65 6D 00 00 00 63 7B 9A B3 64 EE 2F 00 00 00 20  em...c{..d./... 
0x000001C0  21 00 07 65 24 41 00 08 00 00 00 00 10 00 00 65  !..e$A.........e
0x000001D0  25 41 0B AA 28 82 00 08 10 00 00 00 10 00 00 AA  %A..(...........
0x000001E0  29 82 0B EF 2C C3 00 08 20 00 00 00 10 00 00 EF  )...,... .......
0x000001F0  2D C3 0F FE FF 90 00 08 30 00 00 F0 AF 00 55 AA  -.......0.....U.</dev:code>
				<dev:remarks>
					<maml:para>This example shows how the AsBytes parameter returns the Boot Sector as a byte
array and being Formatted to a hex dump by Format-Hex.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-AlternateDataStream</command:name>
			<maml:description>
				<maml:para>Gets the NTFS Alternate Data Streams that are resident on the specified volume.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>AlternateDataStream</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>The Get-AlternateDataStream cmdlet parses the Master File Table and returns AlternateDataStream objects for files that contain more than one $DATA attribute.

NTFS stores file contents in $DATA attributes. The file system allows a single file to maintain multiple $DATA attributes. When a file has more than one $DATA attribute the additional attributes are referred to as &quot;Alternate Data Streams&quot;.  </maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-AlternateDataStream</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="">
					<maml:name>VolumeName</maml:name>
					<maml:description>
						<maml:para>The name of the Volume or Logical Partition (Ex. \\.\C:, \\.\HARDDISKVOLUME1, or C).</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
					<dev:defaultValue>\\.\C:</dev:defaultValue>
				</command:parameter>
			</command:syntaxItem>
			<command:syntaxItem>
				<maml:name>Get-AlternateDataStream</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="FullName">
					<maml:name>Path</maml:name>
					<maml:description>
						<maml:para>The path of a file that should be checked for alternate data streams.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="">
				<maml:name>VolumeName</maml:name>
				<maml:description>
					<maml:para>The name of the Volume or Logical Partition (Ex. \\.\C:, \\.\HARDDISKVOLUME1, or C).</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>\\.\C:</dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="FullName">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>The path of a file that should be checked for alternate data streams.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>None</maml:name>
					<maml:uri/>
				</dev:type>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<maml:description>
					<maml:para/>
				</maml:description>
				<dev:type>
					<maml:name>PowerForensics.Artifacts.AlternateDataStream</maml:name>
					<maml:uri/>
				</dev:type>
			</command:returnValue>
		</command:returnValues>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt; </maml:para>
				</maml:introduction>
				<dev:code>Get-AlternateDataStream</dev:code>
				<dev:remarks>
					<maml:para>This example shows Get-AlternateDataStream getting all ADS on the C:\ logical volume.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-Amcache</command:name>
			<maml:description>
				<maml:para>Gets previously ran commands from the Amcache.hve registry hive.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>Amcache</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>The Get-Amcache cmdlet parses the Amcache.hve registry hive to derive applications that were recently used. If a specific hive path is not specified the cmdlet parses the C:\Windows\AppCompat\Programs\Amcache.hve.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-Amcache</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="">
					<maml:name>VolumeName</maml:name>
					<maml:description>
						<maml:para>The name of the Volume or Logical Partition (Ex. \\.\C:, \\.\HARDDISKVOLUME1, or C).</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
					<dev:defaultValue>\\.\C:</dev:defaultValue>
				</command:parameter>
			</command:syntaxItem>
			<command:syntaxItem>
				<maml:name>Get-Amcache</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="Path">
					<maml:name>HivePath</maml:name>
					<maml:description>
						<maml:para>Registry hive to parse.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="">
				<maml:name>VolumeName</maml:name>
				<maml:description>
					<maml:para>The name of the Volume or Logical Partition (Ex. \\.\C:, \\.\HARDDISKVOLUME1, or C).</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>\\.\C:</dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="Path">
				<maml:name>HivePath</maml:name>
				<maml:description>
					<maml:para>Registry hive to parse.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>None</maml:name>
					<maml:uri/>
				</dev:type>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<maml:description>
					<maml:para/>
				</maml:description>
				<dev:type>
					<maml:name>PowerForensics.Artifacts.Amcache</maml:name>
					<maml:uri/>
				</dev:type>
			</command:returnValue>
		</command:returnValues>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt; </maml:para>
				</maml:introduction>
				<dev:code>Get-Amcache
				</dev:code>
				<dev:remarks>
					<maml:para>This example shows Get-Amcache being run against the default Amcache.hve (C:\Windows\AppCompat\Programs\Amcache.hve)</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-Amcache -HivePath C:\Windows\AppCompat\Programs\Amcache.hve</dev:code>
				<dev:remarks>
					<maml:para>This is an example of Get-Amcache taking a Amcache.hve as an argument.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-AttrDef</command:name>
			<maml:description>
				<maml:para>Gets information about all the Master File Table (MFT) file attributes usable in a volume.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>AttrDef</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>The Get-AttrDef cmdlet parses the $AttrDef file on the specified volume, and returns information about all MFT file attributes usable in the volume.

By default the cmdlet will parse the $AttrDef file on the C:\ drive. The target drive can be changed with the -VolumeName parameter, or an exported $AttrDef file can be used with the -Path parameter.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-AttrDef</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>VolumeName</maml:name>
					<maml:description>
						<maml:para>The name of the Volume or Logical Partition (Ex. \\.\C:, \\.\HARDDISKVOLUME1, or C).</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
					<dev:defaultValue>\\.\C:</dev:defaultValue>
				</command:parameter>
			</command:syntaxItem>
			<command:syntaxItem>
				<maml:name>Get-AttrDef</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="FullName">
					<maml:name>Path</maml:name>
					<maml:description>
						<maml:para>Path to file to be parsed.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>VolumeName</maml:name>
				<maml:description>
					<maml:para>The name of the Volume or Logical Partition (Ex. \\.\C:, \\.\HARDDISKVOLUME1, or C).</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>\\.\C:</dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="FullName">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Path to file to be parsed.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para/>
				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<maml:description>
					<maml:para/>
				</maml:description>
				<dev:type>
					<maml:name>PowerForensics.Ntfs.AttrDef</maml:name>
					<maml:uri/>
				</dev:type>
			</command:returnValue>
		</command:returnValues>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-AttrDef -VolumeName \\.\C:

Name                      Type   MinSize MaxSize
----                      ----   ------- -------
$STANDARD_INFORMATION     16     48      72
$ATTRIBUTE_LIST           32     0       18446744073709551615
$FILE_NAME                48     68      578
$OBJECT_ID                64     0       256
$SECURITY_DESCRIPTOR      80     0       18446744073709551615
$VOLUME_NAME              96     2       256
$VOLUME_INFORMATION       112    12      12
$DATA                     128    0       18446744073709551615
$INDEX_ROOT               144    0       18446744073709551615
$INDEX_ALLOCATION         160    0       18446744073709551615
$BITMAP                   176    0       18446744073709551615
$REPARSE_POINT            192    0       16384
$EA_INFORMATION           208    8       8
$EA                       224    0       65536
$LOGGED_UTILITY_STREAM    256    0       65536</dev:code>
				<dev:remarks>
					<maml:para>This example shows returning the MFT Attribute definitions for the C Volume.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt; </maml:para>
				</maml:introduction>
				<dev:code>Get-AttrDef -Path &apos;C:\$AttrDef&apos;

Name                      Type   MinSize MaxSize
----                      ----   ------- -------
$STANDARD_INFORMATION     16     48      72
$ATTRIBUTE_LIST           32     0       18446744073709551615
$FILE_NAME                48     68      578
$OBJECT_ID                64     0       256
$SECURITY_DESCRIPTOR      80     0       18446744073709551615
$VOLUME_NAME              96     2       256
$VOLUME_INFORMATION       112    12      12
$DATA                     128    0       18446744073709551615
$INDEX_ROOT               144    0       18446744073709551615
$INDEX_ALLOCATION         160    0       18446744073709551615
$BITMAP                   176    0       18446744073709551615
$REPARSE_POINT            192    0       16384
$EA_INFORMATION           208    8       8
$EA                       224    0       65536
$LOGGED_UTILITY_STREAM    256    0       65536</dev:code>
				<dev:remarks>
					<maml:para>This example shows Get-AttrDef being run against an exported file.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-Bitmap</command:name>
			<maml:description>
				<maml:para>Gets whether or not the specified cluster is allocated.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>Bitmap</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>The Get-Bitmap cmdlet parses the $Bitmap file to determine whether or not the specified cluster is allocated.

By default the cmdlet will parse the $Bitmap file on the C:\ drive. The target drive can be changed with the -VolumeName parameter, or an exported $Bitmap file can be used with the -Path parameter.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-Bitmap</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="">
					<maml:name>VolumeName</maml:name>
					<maml:description>
						<maml:para>The name of the Volume or Logical Partition (Ex. \\.\C:, \\.\HARDDISKVOLUME1, or C).</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
					<dev:defaultValue>\\.\C:</dev:defaultValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>Cluster</maml:name>
					<maml:description>
						<maml:para>The cluster number to check for allocation.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">UInt64</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
			</command:syntaxItem>
			<command:syntaxItem>
				<maml:name>Get-Bitmap</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="FullName">
					<maml:name>Path</maml:name>
					<maml:description>
						<maml:para>Path to file to be parsed.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>Cluster</maml:name>
					<maml:description>
						<maml:para>The cluster number to check for allocation.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">UInt64</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="">
				<maml:name>VolumeName</maml:name>
				<maml:description>
					<maml:para>The name of the Volume or Logical Partition (Ex. \\.\C:, \\.\HARDDISKVOLUME1, or C).</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>\\.\C:</dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>Cluster</maml:name>
				<maml:description>
					<maml:para>The cluster number to check for allocation.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">UInt64</command:parameterValue>
				<dev:type>
					<maml:name>UInt64</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="FullName">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Path to file to be parsed.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para/>
				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<maml:description>
					<maml:para/>
				</maml:description>
				<dev:type>
					<maml:name>PowerForensics.Ntfs.Bitmap</maml:name>
					<maml:uri/>
				</dev:type>
			</command:returnValue>
		</command:returnValues>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt; </maml:para>
				</maml:introduction>
				<dev:code>Get-Bitmap -Cluster 1000

Cluster InUse
------- -----
   1000  True
				</dev:code>
				<dev:remarks>
					<maml:para>This example shows Get-Bitmap being used to check Cluster 1000&apos;s allocation status.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-Bitmap -Cluster 1000 -Path &apos;C:\$Bitmap&apos;

Cluster InUse
------- -----
   1000  True</dev:code>
				<dev:remarks>
					<maml:para>This example shows Get-Bitmap checking cluster 1000 of the exported C:\$Bitmap file.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-BootSector</command:name>
			<maml:description>
				<maml:para>Gets the Boot Sector (Master Boot Record or Guid Partition Table) for the specified physical drive.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>BootSector</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>The Get-BootSector cmdlet gets parses Logical Block Address 0 of the specified physical drive to determine whether the disk is formatted using a Master Boot Record or a Guid Partition Table, and returns the appropriate object.

This cmdlet can be used in place of Get-MasterBootRecord and Get-GuidPartitionTable if the disk&apos;s partitioning scheme is not known.

By default, Get-BootSector returns a MasterBootRecord or GuidPartitionTable object. You can also use the AsBytes switch parameter to return the raw bytes of the appropriate Boot Sector.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-BootSector</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="DrivePath">
					<maml:name>Path</maml:name>
					<maml:description>
						<maml:para>Specified the physical drive to investigate. (Ex. \\.\PHYSICALDRIVE0)</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>AsBytes</maml:name>
					<maml:description>
						<maml:para>Specifies that the Guid Partition Table is returned as raw bytes instead of as a custom object.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="DrivePath">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Specified the physical drive to investigate. (Ex. \\.\PHYSICALDRIVE0)</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>AsBytes</maml:name>
				<maml:description>
					<maml:para>Specifies that the Guid Partition Table is returned as raw bytes instead of as a custom object.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>None</maml:name>
					<maml:uri/>
				</dev:type>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<maml:description>
					<maml:para/>
				</maml:description>
				<dev:type>
					<maml:name>PowerForensics.MasterBootRecord</maml:name>
					<maml:uri/>
				</dev:type>
			</command:returnValue>
			<command:returnValue>
				<maml:description>
					<maml:para/>
				</maml:description>
				<dev:type>
					<maml:name>PowerForensics.GuidPartitionTable</maml:name>
					<maml:uri/>
				</dev:type>
			</command:returnValue>
		</command:returnValues>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-BootSector -Path \\.\PHYSICALDRIVE0

MBRSignature    DiskSignature    BootCode                  PartitionTable
------------    -------------    --------                  --------------
Windows 6.1+    82D4BA7D         {51, 192, 142, 208...}    {NTFS}</dev:code>
				<dev:remarks>
					<maml:para>This example shows Get-MBR being used to return the MBR object from
\\.\PHYSICALDRIVE0.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-BootSector -Path \\.\PHYSICALDRIVE1

Revision                 : 0.1
HeaderSize               : 92
MyLBA                    : 1
AlternateLBA             : 20971519
FirstUsableLBA           : 34
LastUsableLBA            : 20971486
DiskGUID                 : f913e110-0835-4cf1-96c7-380b5db4a42d
PartitionEntryLBA        : 2
NumberOfPartitionEntries : 128
SizeOfPartitionEntry     : 128
PartitionTable           : {Microsoft reserved partition, Basic data partition, Basic data partition}</dev:code>
				<dev:remarks>
					<maml:para>This example shows Get-BootSector being used to return the GPT object from
\\.\PHYSICALDRIVE1.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-MBR -Path \\.\PHYSICALDRIVE2 -AsBytes | Format-Hex

Offset     _00_01_02_03_04_05_06_07_08_09_0A_0B_0C_0D_0E_0F  Ascii           
------     ------------------------------------------------  -----           
0x00000000  33 C0 8E D0 BC 00 7C 8E C0 8E D8 BE 00 7C BF 00  3.....|......|..
0x00000010  06 B9 00 02 FC F3 A4 50 68 1C 06 CB FB B9 04 00  .......Ph.......
0x00000020  BD BE 07 80 7E 00 00 7C 0B 0F 85 0E 01 83 C5 10  ....~..|........
0x00000030  E2 F1 CD 18 88 56 00 55 C6 46 11 05 C6 46 10 00  .....V.U.F...F..
0x00000040  B4 41 BB AA 55 CD 13 5D 72 0F 81 FB 55 AA 75 09  .A..U..]r...U.u.
0x00000050  F7 C1 01 00 74 03 FE 46 10 66 60 80 7E 10 00 74  ....t..F.f`.~..t
0x00000060  26 66 68 00 00 00 00 66 FF 76 08 68 00 00 68 00  &amp;fh....f.v.h..h.
0x00000070  7C 68 01 00 68 10 00 B4 42 8A 56 00 8B F4 CD 13  |h..h...B.V.....
0x00000080  9F 83 C4 10 9E EB 14 B8 01 02 BB 00 7C 8A 56 00  ............|.V.
0x00000090  8A 76 01 8A 4E 02 8A 6E 03 CD 13 66 61 73 1C FE  .v..N..n...fas..
0x000000A0  4E 11 75 0C 80 7E 00 80 0F 84 8A 00 B2 80 EB 84  N.u..~..........
0x000000B0  55 32 E4 8A 56 00 CD 13 5D EB 9E 81 3E FE 7D 55  U2..V...]...&gt;.}U
0x000000C0  AA 75 6E FF 76 00 E8 8D 00 75 17 FA B0 D1 E6 64  .un.v....u.....d
0x000000D0  E8 83 00 B0 DF E6 60 E8 7C 00 B0 FF E6 64 E8 75  ......`.|....d.u
0x000000E0  00 FB B8 00 BB CD 1A 66 23 C0 75 3B 66 81 FB 54  .......f#.u;f..T
0x000000F0  43 50 41 75 32 81 F9 02 01 72 2C 66 68 07 BB 00  CPAu2....r,fh...
0x00000100  00 66 68 00 02 00 00 66 68 08 00 00 00 66 53 66  .fh....fh....fSf
0x00000110  53 66 55 66 68 00 00 00 00 66 68 00 7C 00 00 66  SfUfh....fh.|..f
0x00000120  61 68 00 00 07 CD 1A 5A 32 F6 EA 00 7C 00 00 CD  ah.....Z2...|...
0x00000130  18 A0 B7 07 EB 08 A0 B6 07 EB 03 A0 B5 07 32 E4  ..............2.
0x00000140  05 00 07 8B F0 AC 3C 00 74 09 BB 07 00 B4 0E CD  ......&lt;.t.......
0x00000150  10 EB F2 F4 EB FD 2B C9 E4 64 EB 00 24 02 E0 F8  ......+..d..$...
0x00000160  24 02 C3 49 6E 76 61 6C 69 64 20 70 61 72 74 69  $..Invalid parti
0x00000170  74 69 6F 6E 20 74 61 62 6C 65 00 45 72 72 6F 72  tion table.Error
0x00000180  20 6C 6F 61 64 69 6E 67 20 6F 70 65 72 61 74 69   loading operati
0x00000190  6E 67 20 73 79 73 74 65 6D 00 4D 69 73 73 69 6E  ng system.Missin
0x000001A0  67 20 6F 70 65 72 61 74 69 6E 67 20 73 79 73 74  g operating syst
0x000001B0  65 6D 00 00 00 63 7B 9A B3 64 EE 2F 00 00 00 20  em...c{..d./... 
0x000001C0  21 00 07 65 24 41 00 08 00 00 00 00 10 00 00 65  !..e$A.........e
0x000001D0  25 41 0B AA 28 82 00 08 10 00 00 00 10 00 00 AA  %A..(...........
0x000001E0  29 82 0B EF 2C C3 00 08 20 00 00 00 10 00 00 EF  )...,... .......
0x000001F0  2D C3 0F FE FF 90 00 08 30 00 00 F0 AF 00 55 AA  -.......0.....U.</dev:code>
				<dev:remarks>
					<maml:para>This example shows how the AsBytes parameter returns the Boot Sector as a byte
array.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-ChildItemRaw</command:name>
			<maml:description>
				<maml:para>Gets the contents of a directory in a forensically sound manner.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>ChildItemRaw</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>The Get-ChildItemRaw cmdlet parses the Master File Table (MFT) to determine the contents of the specified directory. Directory contents are stored in the MFT File Record&apos;s $INDEX_ROOT and $INDEX_ALLOCATION attributes.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-ChildItemRaw</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="FullName">
					<maml:name>Path</maml:name>
					<maml:description>
						<maml:para>The directory for which subcontents should be listed.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="FullName">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>The directory for which subcontents should be listed.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>None</maml:name>
					<maml:uri/>
				</dev:type>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<maml:description>
					<maml:para/>
				</maml:description>
				<dev:type>
					<maml:name>PowerForensics.Ntfs.IndexEntry</maml:name>
					<maml:uri/>
				</dev:type>
			</command:returnValue>
		</command:returnValues>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-ContentRaw</command:name>
			<maml:description>
				<maml:para>Gets the content of a file from the file&apos;s raw bytes on disk.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>ContentRaw</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>The Get-ContentRaw cmdlet parses the Master File Table to determine the location of the specified file&apos;s data/contents. The raw bytes are then read and output using the specified encoding. This cmdlet bypasses NTFS Permissions and Operating System locks.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-ContentRaw</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="FullName">
					<maml:name>Path</maml:name>
					<maml:description>
						<maml:para>Specifies the path to a file. Get-ContentRaw gets the content of the file. The parameter name (&quot;Path&quot; or &quot;FilePath&quot;) is optional.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>Encoding</maml:name>
					<maml:description>
						<maml:para>Specifies the encoding to use when outputing the file&apos;s contents. Encoding options include ASCII, BigEndianUnicode, Byte, String, Unicode, Unknown, UTF7, and UTF8.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">FileSystemCmdletProviderEncoding</command:parameterValue>
					<dev:defaultValue>Default (ASCII on en-US systems)</dev:defaultValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="First, Head">
					<maml:name>TotalCount</maml:name>
					<maml:description>
						<maml:para>Gets the specified number of lines from the beginning of a file or other item.
The default is -1 (all lines).

You can use the &quot;TotalCount&quot; parameter name or its aliases, &quot;First&quot; or &quot;Head&quot;.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">Int64</command:parameterValue>
					<dev:defaultValue>-1</dev:defaultValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="Last">
					<maml:name>Tail</maml:name>
					<maml:description>
						<maml:para>Gets the specified number of lines from the end of a file or other item.

You can use the &quot;Tail&quot; parameter name or its alias, &quot;Last&quot;.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">Int64</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
			</command:syntaxItem>
			<command:syntaxItem>
				<maml:name>Get-ContentRaw</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>VolumeName</maml:name>
					<maml:description>
						<maml:para>The name of the Logical Volume where the file is located. (Ex. \\.\C: or C)</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue>\\.\C:</dev:defaultValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>IndexNumber</maml:name>
					<maml:description>
						<maml:para>The file&#39;s MFT Record Index number.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>Encoding</maml:name>
					<maml:description>
						<maml:para>Specifies the encoding to use when outputing the file&apos;s contents. Encoding options include ASCII, BigEndianUnicode, Byte, String, Unicode, Unknown, UTF7, and UTF8.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">FileSystemCmdletProviderEncoding</command:parameterValue>
					<dev:defaultValue>Default (ASCII on en-US systems)</dev:defaultValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="First, Head">
					<maml:name>TotalCount</maml:name>
					<maml:description>
						<maml:para>Gets the specified number of lines from the beginning of a file or other item.
The default is -1 (all lines).

You can use the &quot;TotalCount&quot; parameter name or its aliases, &quot;First&quot; or &quot;Head&quot;.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">Int64</command:parameterValue>
					<dev:defaultValue>-1</dev:defaultValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="Last">
					<maml:name>Tail</maml:name>
					<maml:description>
						<maml:para>Gets the specified number of lines from the end of a file or other item.

You can use the &quot;Tail&quot; parameter name or its alias, &quot;Last&quot;.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">Int64</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="FullName">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Specifies the path to a file. Get-ContentRaw gets the content of the file. The parameter name (&quot;Path&quot; or &quot;FilePath&quot;) is optional.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>Encoding</maml:name>
				<maml:description>
					<maml:para>Specifies the encoding to use when outputing the file&apos;s contents. Encoding options include ASCII, BigEndianUnicode, Byte, String, Unicode, Unknown, UTF7, and UTF8.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">FileSystemCmdletProviderEncoding</command:parameterValue>
				<dev:type>
					<maml:name>FileSystemCmdletProviderEncoding</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>Default (ASCII on en-US systems)</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="First, Head">
				<maml:name>TotalCount</maml:name>
				<maml:description>
					<maml:para>Gets the specified number of lines from the beginning of a file or other item.
The default is -1 (all lines).

You can use the &quot;TotalCount&quot; parameter name or its aliases, &quot;First&quot; or &quot;Head&quot;.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">Int64</command:parameterValue>
				<dev:type>
					<maml:name>Int64</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>-1</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="Last">
				<maml:name>Tail</maml:name>
				<maml:description>
					<maml:para>Gets the specified number of lines from the end of a file or other item.

You can use the &quot;Tail&quot; parameter name or its alias, &quot;Last&quot;.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">Int64</command:parameterValue>
				<dev:type>
					<maml:name>Int64</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>VolumeName</maml:name>
				<maml:description>
					<maml:para>The name of the Logical Volume where the file is located. (Ex. \\.\C: or C)</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>\\.\C:</dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>IndexNumber</maml:name>
				<maml:description>
					<maml:para>The file&#39;s MFT Record Index number.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
				<dev:type>
					<maml:name>Int32</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>None</maml:name>
					<maml:uri/>
				</dev:type>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<maml:description>
					<maml:para/>
				</maml:description>
				<dev:type>
					<maml:name>System.Byte</maml:name>
					<maml:uri/>
				</dev:type>
			</command:returnValue>
			<command:returnValue>
				<maml:description>
					<maml:para/>
				</maml:description>
				<dev:type>
					<maml:name>System.Text.Encoding.ASCII</maml:name>
					<maml:uri/>
				</dev:type>
			</command:returnValue>
			<command:returnValue>
				<maml:description>
					<maml:para/>
				</maml:description>
				<dev:type>
					<maml:name>System.Text.Encoding.BigEndianUnicode</maml:name>
					<maml:uri/>
				</dev:type>
			</command:returnValue>
			<command:returnValue>
				<maml:description>
					<maml:para/>
				</maml:description>
				<dev:type>
					<maml:name>System.Text.Encoding.Unicode</maml:name>
					<maml:uri/>
				</dev:type>
			</command:returnValue>
			<command:returnValue>
				<maml:description>
					<maml:para/>
				</maml:description>
				<dev:type>
					<maml:name>System.Text.Encoding.Unicode</maml:name>
					<maml:uri/>
				</dev:type>
			</command:returnValue>
			<command:returnValue>
				<maml:description>
					<maml:para/>
				</maml:description>
				<dev:type>
					<maml:name>System.Text.Encoding.UTF7</maml:name>
					<maml:uri/>
				</dev:type>
			</command:returnValue>
			<command:returnValue>
				<maml:description>
					<maml:para/>
				</maml:description>
				<dev:type>
					<maml:name>System.Text.Encoding.UTF8</maml:name>
					<maml:uri/>
				</dev:type>
			</command:returnValue>
		</command:returnValues>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-ContentRaw C:\Windows\System32\config\SAM -Encoding Unicode</dev:code>
				<dev:remarks>
					<maml:para>This example outputs the content of the SAM registry hive using Unicode encoding.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-ContentRaw -Path C:\Windows\DtcInstall.log -TotalCount 3

08-22-2013 00:18 : DTC Install error = 0, Enter MsDtcAdvancedInstaller::Configure, base\wcp\plugi
ns\msdtc\msdtcadvancedinstaller\msdtcadvancedinstaller.cpp (419)
08-22-2013 00:18 : DTC Install error = 0, Action: None, base\wcp\plugins\msdtc\msdtcadvancedinsta
ller\msdtcadvancedinstaller.cpp (448)
08-22-2013 00:18 : DTC Install error = 0, Entering CreateXATmSecurityKeyCNG, base\wcp\plugins\msd
tc\msdtcadvancedinstaller\msdtcadvancedinstaller.cpp (1758)</dev:code>
				<dev:remarks>
					<maml:para>This example outputs the first 3 lines of the DtcInstall.log file.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-ContentRaw -VolumeName C -IndexNumber 0</dev:code>
				<dev:remarks>
					<maml:para>This example outputs the contents of the MFT file itself (the MFT is located at MFT Index 0) using the Default character encoding (ASCII on en-US systems).</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-EventLog</command:name>
			<maml:description>
				<maml:para>Gets the events in an Event Log or in all Event Logs.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>EventLog</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>The Get-EventLog cmdlet parses the specified Event Log file to return an array of EventRecord objects. If a specific Event Log is not specified, Get-EventLog parses all Event Logs in the C:\Windows\system32\winevt\Logs directory.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-EventLog</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="">
					<maml:name>VolumeName</maml:name>
					<maml:description>
						<maml:para>The name of the Volume or Logical Partition (Ex. \\.\C:, \\.\HARDDISKVOLUME1, or C).</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
					<dev:defaultValue>\\.\C:</dev:defaultValue>
				</command:parameter>
			</command:syntaxItem>
			<command:syntaxItem>
				<maml:name>Get-EventLog</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="FullName">
					<maml:name>Path</maml:name>
					<maml:description>
						<maml:para>Path to file to be parsed.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="">
				<maml:name>VolumeName</maml:name>
				<maml:description>
					<maml:para>The name of the Volume or Logical Partition (Ex. \\.\C:, \\.\HARDDISKVOLUME1, or C).</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>\\.\C:</dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="FullName">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Path to file to be parsed.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>None</maml:name>
					<maml:uri/>
				</dev:type>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<maml:description>
					<maml:para/>
				</maml:description>
				<dev:type>
					<maml:name>PowerForensics.EventLog.EventRecord</maml:name>
					<maml:uri/>
				</dev:type>
			</command:returnValue>
		</command:returnValues>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt; </maml:para>
				</maml:introduction>
				<dev:code>Get-EventLog</dev:code>
				<dev:remarks>
					<maml:para>This example shows Get-EventLog being used to parse all event logs in the C:\windows\system32\winevt\logs\ directory.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt; </maml:para>
				</maml:introduction>
				<dev:code>Get-EventLog -Path C:\evidence\Application.evtx</dev:code>
				<dev:remarks>
					<maml:para>This example shows Get-EventLog being used to parse an exported Application event log</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-FileRecord</command:name>
			<maml:description>
				<maml:para>Gets the file records from the Master File Table of the specified volume.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>FileRecord</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>The Get-FileRecord cmdlet parses the $MFT file to return an array of FileRecord entries.

By default the cmdlet will parse the $MFT file on the C:\ drive. The target drive can be changed with the -VolumeName parameter, or an exported $MFT file can be used with the -Path parameter.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-FileRecord</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="">
					<maml:name>Index</maml:name>
					<maml:description>
						<maml:para>The index number of the desired Master File Table entry.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>VolumeName</maml:name>
					<maml:description>
						<maml:para>The name of the Volume or Logical Partition (Ex. \\.\C:, \\.\HARDDISKVOLUME1, or C).</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
					<dev:defaultValue>\\.\C:</dev:defaultValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>AsBytes</maml:name>
					<maml:description>
						<maml:para>Returns Master File Table Entry as byte array instead of as FileRecord object.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
			</command:syntaxItem>
			<command:syntaxItem>
				<maml:name>Get-FileRecord</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="0" aliases="FullName">
					<maml:name>Path</maml:name>
					<maml:description>
						<maml:para>The path of the desired Master File Table entry.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>AsBytes</maml:name>
					<maml:description>
						<maml:para>Returns Master File Table Entry as byte array instead of as FileRecord object.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
			</command:syntaxItem>
			<command:syntaxItem>
				<maml:name>Get-FileRecord</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>MftPath</maml:name>
					<maml:description>
						<maml:para>Path to an exported Master File Table.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>VolumeName</maml:name>
				<maml:description>
					<maml:para>The name of the Volume or Logical Partition (Ex. \\.\C:, \\.\HARDDISKVOLUME1, or C).</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>\\.\C:</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="">
				<maml:name>Index</maml:name>
				<maml:description>
					<maml:para>The index number of the desired Master File Table entry.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
				<dev:type>
					<maml:name>Int32</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>AsBytes</maml:name>
				<maml:description>
					<maml:para>Returns Master File Table Entry as byte array instead of as FileRecord object.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="0" aliases="FullName">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>The path of the desired Master File Table entry.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>MftPath</maml:name>
				<maml:description>
					<maml:para>Path to an exported Master File Table.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para/>
				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<maml:description>
					<maml:para/>
				</maml:description>
				<dev:type>
					<maml:name>PowerForensics.Ntfs.FileRecord</maml:name>
					<maml:uri/>
				</dev:type>
			</command:returnValue>
			<command:returnValue>
				<dev:type>
					<maml:name>System.Byte</maml:name>
					<maml:uri/>
				</dev:type>
			</command:returnValue>
		</command:returnValues>
		<command:examples>
			<!--Examples-->
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-FileRecordIndex</command:name>
			<maml:description>
				<maml:para>Gets the MFT Record Index for the specified file.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>FileRecordIndex</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>The Get-FileRecordIndex cmdlet returns the Master File Table Record Index Number for the specified file.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-FileRecordIndex</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="FullName">
					<maml:name>Path</maml:name>
					<maml:description>
						<maml:para>The path of the file to return the Master File Table record index for.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="FullName">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>The path of the file to return the Master File Table record index for.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>None</maml:name>
					<maml:uri/>
				</dev:type>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<maml:description>
					<maml:para/>
				</maml:description>
				<dev:type>
					<maml:name>System.UInt64</maml:name>
					<maml:uri/>
				</dev:type>
			</command:returnValue>
		</command:returnValues>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt; </maml:para>
				</maml:introduction>
				<dev:code>Get-MFTRecordIndex C:\Windows\Notepad.exe
				</dev:code>
				<dev:remarks>
					<maml:para>This example shows Get-MFTRecordIndex returning the Master File Table Record Index for C:\Windows\Notepad.exe.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-FileSlack</command:name>
			<maml:description>
				<maml:para>Gets the specified volume&apos;s slack space.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>FileSlack</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>The Get-FileSlack cmdlet returns the specified volume&apos;s slack space in the form of a byte array.

When NTFS stores data in the form of a file, data must be allocated in cluster size chunks (Commonly 4096 bytes). Slack space is the difference between the true size of a file&apos;s contents and the allocated size of a file on disk.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-FileSlack</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="">
					<maml:name>Index</maml:name>
					<maml:description>
						<maml:para>The index number of the file to return slack space for.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>VolumeName</maml:name>
					<maml:description>
						<maml:para>The name of the Volume or Logical Partition (Ex. \\.\C:, \\.\HARDDISKVOLUME1, or C).</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
					<dev:defaultValue>\\.\C:</dev:defaultValue>
				</command:parameter>
			</command:syntaxItem>
			<command:syntaxItem>
				<maml:name>Get-FileSlack</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="0" aliases="FullName">
					<maml:name>Path</maml:name>
					<maml:description>
						<maml:para>The path of the file to return slack space for.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>VolumeName</maml:name>
				<maml:description>
					<maml:para>The name of the Volume or Logical Partition (Ex. \\.\C:, \\.\HARDDISKVOLUME1, or C).</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>\\.\C:</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="">
				<maml:name>Index</maml:name>
				<maml:description>
					<maml:para>The index number of the file to return slack space for.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
				<dev:type>
					<maml:name>Int32</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="0" aliases="FullName">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>The path of the file to return slack space for.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para/>
				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<maml:description>
					<maml:para/>
				</maml:description>
				<dev:type>
					<maml:name>System.Byte[]</maml:name>
					<maml:uri/>
				</dev:type>
			</command:returnValue>
		</command:returnValues>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt; </maml:para>
				</maml:introduction>
				<dev:code>Get-FileSlack -VolumeName \\.\C: -Index 0</dev:code>
				<dev:remarks>
					<maml:para>This example shows Get-FileSlack being used to get the slack space from the file that is MFT record index 0 on the C:\ logical volume.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt; </maml:para>
				</maml:introduction>
				<dev:code>Get-FileSlack -Path C:\windows\notepad.exe</dev:code>
				<dev:remarks>
					<maml:para>This example show Get-FileSlack being used to return the slack space for notepad.exe.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-GuidPartitionTable</command:name>
			<maml:description>
				<maml:para>Gets the Guid Partition Table for the specified physical drive.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>GuidPartitionTable</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>The Get-GuidPartitionTable cmdlet gets the Guid Partition Table for the specified physical drive.

By default, Get-GuidPartitionTable returns a GuidPartitionTable object. You can also use the AsBytes switch parameter to return the raw bytes of the Guid Partition Table.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-GuidPartitionTable</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="DrivePath">
					<maml:name>Path</maml:name>
					<maml:description>
						<maml:para>Specified the physical drive to investigate. (Ex. \\.\PHYSICALDRIVE0)</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>AsBytes</maml:name>
					<maml:description>
						<maml:para>Returns Guid Partition Table as byte array instead of as GuidPartitionTable object.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="DrivePath">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Specified the physical drive to investigate. (Ex. \\.\PHYSICALDRIVE0)</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>AsBytes</maml:name>
				<maml:description>
					<maml:para>Returns Guid Partition Table as byte array instead of as GuidPartitionTable object.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>None</maml:name>
					<maml:uri/>
				</dev:type>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<maml:description>
					<maml:para/>
				</maml:description>
				<dev:type>
					<maml:name>PowerForensics.GuidPartitionTable</maml:name>
					<maml:uri/>
				</dev:type>
			</command:returnValue>
			<command:returnValue>
				<dev:type>
					<maml:name>System.Byte</maml:name>
					<maml:uri/>
				</dev:type>
			</command:returnValue>
		</command:returnValues>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt; </maml:para>
				</maml:introduction>
				<dev:code>Get-GuidPartitionTable -Path \\.\PHYSICALDRIVE1

Revision                 : 0.1
HeaderSize               : 92
MyLBA                    : 1
AlternateLBA             : 20971519
FirstUsableLBA           : 34
LastUsableLBA            : 20971486
DiskGuid                 : f913e110-0835-4cf1-96c7-380b5db4a42d
PartitionEntryLBA        : 2
NumberOfPartitionEntries : 128
SizeOfPartitionEntry     : 128
PartitionTable           : {Microsoft reserved partition, Basic data partition, Basic data partition}</dev:code>
				<dev:remarks>
					<maml:para>This is an example of Get-GuidPartitionTable being run against \\.\PHYSICALDRIVE1</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt; </maml:para>
				</maml:introduction>
				<dev:code>Get-GuidPartitionTable -Path \\.\PHYSICALDRIVE1 -AsBytes | Format-Hex

Offset     _00_01_02_03_04_05_06_07_08_09_0A_0B_0C_0D_0E_0F  Ascii
------     ------------------------------------------------  -----
0x00000000  45 46 49 20 50 41 52 54 00 00 01 00 5C 00 00 00  EFI PART....\...
0x00000010  F3 73 9F 97 00 00 00 00 01 00 00 00 00 00 00 00  .s..............
0x00000020  FF FF 3F 01 00 00 00 00 22 00 00 00 00 00 00 00  ..?.....&quot;.......
0x00000030  DE FF 3F 01 00 00 00 00 10 E1 13 F9 35 08 F1 4C  ..?.........5..L
0x00000040  96 C7 38 0B 5D B4 A4 2D 02 00 00 00 00 00 00 00  ..8.]..-........
0x00000050  80 00 00 00 80 00 00 00 3B 04 A4 F8 00 00 00 00  ........;.......
0x00000060  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
0x00000070  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
0x00000080  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
0x00000090  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
0x000000A0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
0x000000B0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
0x000000C0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
0x000000D0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
0x000000E0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
0x000000F0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
0x00000100  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
0x00000110  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
0x00000120  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
0x00000130  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
0x00000140  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
0x00000150  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
0x00000160  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
0x00000170  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
0x00000180  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
0x00000190  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
0x000001A0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
0x000001B0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
0x000001C0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
0x000001D0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
0x000001E0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
0x000001F0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
				</dev:code>
				<dev:remarks>
					<maml:para>This is an example of Get-GuidPartitionTable being run with the AsBytes parameter to return the GPT as a byte array.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-Hash</command:name>
			<maml:description>
				<maml:para>Computes the hash value for a file by using a specified hash algorithm.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>Hash</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>The Get-Hash cmdlet returns a cryptographic hash value for the specified file. The hashing algorithm is specified by the Algorithm parameter.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-Hash</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="FullName">
					<maml:name>Path</maml:name>
					<maml:description>
						<maml:para>The path of the file to be hashed.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>Algorithm</maml:name>
					<maml:description>
						<maml:para>The hashing algorithm to use. Default algorithm is MD5.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>Count</maml:name>
					<maml:description>
						<maml:para>The count of bytes to be included when hashing. Default value is the entire file.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
					<dev:defaultValue>File.Length</dev:defaultValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="FullName">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>The path of the file to be hashed.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Algorithm</maml:name>
				<maml:description>
					<maml:para>The hashing algorithm to use. Default algorithm is MD5.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>Count</maml:name>
				<maml:description>
					<maml:para>The count of bytes to be included when hashing. Default value is the entire file.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
				<dev:type>
					<maml:name>Int32</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>File.Length</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>None</maml:name>
					<maml:uri/>
				</dev:type>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<maml:description>
					<maml:para/>
				</maml:description>
				<dev:type>
					<maml:name>System.Security.Cryptography.HashAlgorithm</maml:name>
					<maml:uri/>
				</dev:type>
			</command:returnValue>
		</command:returnValues>
		<command:examples>
			<!--Examples-->
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-MasterBootRecord</command:name>
			<maml:description>
				<maml:para>Gets the Master Boot Record for the specified physical drive.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>MasterBootRecord</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>The Get-MasterBootRecord cmdlet gets the Master Boot Record for the specified physical drive and analyzes the MBR&apos;s boot code for anomalies.

By default, Get-MasterBootRecord returns a MasterBootRecord object that has detailed information about the drive&apos;s boot code and partition table. You can also use the AsBytes switch parameter to return the raw bytes of the Master Boot Record.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-MasterBootRecord</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="">
					<maml:name>ComputerName</maml:name>
					<maml:description>
						<maml:para>
						</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>AsBytes</maml:name>
					<maml:description>
						<maml:para>Returns Master Boot Record as byte array instead of as MasterBootRecord object.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
			</command:syntaxItem>
			<command:syntaxItem>
				<maml:name>Get-MasterBootRecord</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="DrivePath">
					<maml:name>Path</maml:name>
					<maml:description>
						<maml:para>Specified the physical drive to investigate. (Ex. \\.\PHYSICALDRIVE0)</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>AsBytes</maml:name>
					<maml:description>
						<maml:para>Returns Master Boot Record as byte array instead of as MasterBootRecord object.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="">
				<maml:name>ComputerName</maml:name>
				<maml:description>
					<maml:para>
					</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>AsBytes</maml:name>
				<maml:description>
					<maml:para>Returns Master Boot Record as byte array instead of as MasterBootRecord object.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="DrivePath">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Specified the physical drive to investigate. (Ex. \\.\PHYSICALDRIVE0)</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<maml:description>
					<maml:para/>
				</maml:description>
				<dev:type>
					<maml:name>None</maml:name>
					<maml:uri/>
				</dev:type>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<maml:description>
					<maml:para/>
				</maml:description>
				<dev:type>
					<maml:name>PowerForensics.MasterBootRecord</maml:name>
					<maml:uri/>
				</dev:type>
			</command:returnValue>
			<command:returnValue>
				<dev:type>
					<maml:name>None</maml:name>
					<maml:uri/>
				</dev:type>
			</command:returnValue>
		</command:returnValues>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt; </maml:para>
				</maml:introduction>
				<dev:code>Get-MasterBootRecord -Path \\.\PHYSICALDRIVE0

MBRSignature   DiskSignature   PartitionTable
------------   -------------   --------------
Windows 6.1+   82D4BA7D        {NTFS}</dev:code>
				<dev:remarks>
					<maml:para>This is an example of Get-MasterBootRecord being run against \\.\PHYSICALDRIVE0</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-MasterBootRecord -Path \\.\PHYSICALDRIVE0 -AsBytes | Format-Hex

Offset     _00_01_02_03_04_05_06_07_08_09_0A_0B_0C_0D_0E_0F  Ascii
------     ------------------------------------------------  -----
0x00000000  33 C0 8E D0 BC 00 7C 8E C0 8E D8 BE 00 7C BF 00  3.....|......|..
0x00000010  06 B9 00 02 FC F3 A4 50 68 1C 06 CB FB B9 04 00  .......Ph.......
0x00000020  BD BE 07 80 7E 00 00 7C 0B 0F 85 0E 01 83 C5 10  ....~..|........
0x00000030  E2 F1 CD 18 88 56 00 55 C6 46 11 05 C6 46 10 00  .....V.U.F...F..
0x00000040  B4 41 BB AA 55 CD 13 5D 72 0F 81 FB 55 AA 75 09  .A..U..]r...U.u.
0x00000050  F7 C1 01 00 74 03 FE 46 10 66 60 80 7E 10 00 74  ....t..F.f`.~..t
0x00000060  26 66 68 00 00 00 00 66 FF 76 08 68 00 00 68 00  &amp;fh....f.v.h..h.
0x00000070  7C 68 01 00 68 10 00 B4 42 8A 56 00 8B F4 CD 13  |h..h...B.V.....
0x00000080  9F 83 C4 10 9E EB 14 B8 01 02 BB 00 7C 8A 56 00  ............|.V.
0x00000090  8A 76 01 8A 4E 02 8A 6E 03 CD 13 66 61 73 1C FE  .v..N..n...fas..
0x000000A0  4E 11 75 0C 80 7E 00 80 0F 84 8A 00 B2 80 EB 84  N.u..~..........
0x000000B0  55 32 E4 8A 56 00 CD 13 5D EB 9E 81 3E FE 7D 55  U2..V...]...&gt;.}U
0x000000C0  AA 75 6E FF 76 00 E8 8D 00 75 17 FA B0 D1 E6 64  .un.v....u.....d
0x000000D0  E8 83 00 B0 DF E6 60 E8 7C 00 B0 FF E6 64 E8 75  ......`.|....d.u
0x000000E0  00 FB B8 00 BB CD 1A 66 23 C0 75 3B 66 81 FB 54  .......f#.u;f..T
0x000000F0  43 50 41 75 32 81 F9 02 01 72 2C 66 68 07 BB 00  CPAu2....r,fh...
0x00000100  00 66 68 00 02 00 00 66 68 08 00 00 00 66 53 66  .fh....fh....fSf
0x00000110  53 66 55 66 68 00 00 00 00 66 68 00 7C 00 00 66  SfUfh....fh.|..f
0x00000120  61 68 00 00 07 CD 1A 5A 32 F6 EA 00 7C 00 00 CD  ah.....Z2...|...
0x00000130  18 A0 B7 07 EB 08 A0 B6 07 EB 03 A0 B5 07 32 E4  ..............2.
0x00000140  05 00 07 8B F0 AC 3C 00 74 09 BB 07 00 B4 0E CD  ......&lt;.t.......
0x00000150  10 EB F2 F4 EB FD 2B C9 E4 64 EB 00 24 02 E0 F8  ......+..d..$...
0x00000160  24 02 C3 49 6E 76 61 6C 69 64 20 70 61 72 74 69  $..Invalid parti
0x00000170  74 69 6F 6E 20 74 61 62 6C 65 00 45 72 72 6F 72  tion table.Error
0x00000180  20 6C 6F 61 64 69 6E 67 20 6F 70 65 72 61 74 69   loading operati
0x00000190  6E 67 20 73 79 73 74 65 6D 00 4D 69 73 73 69 6E  ng system.Missin
0x000001A0  67 20 6F 70 65 72 61 74 69 6E 67 20 73 79 73 74  g operating syst
0x000001B0  65 6D 00 00 00 63 7B 9A 82 D4 BA 7D 00 00 80 20  em...c{....}...
0x000001C0  21 00 07 FE FF FF 00 08 00 00 00 F0 7F 07 00 00  !...............
0x000001D0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
0x000001E0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
0x000001F0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 55 AA  ..............U.</dev:code>
				<dev:remarks>
					<maml:para>This is an example of Get-MasterBootRecord being run with the AsBytes parameter to return the MBR as a byte array.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-MftSlack</command:name>
			<maml:description>
				<maml:para>Gets the Master File Table (MFT) slack space for the specified volume.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>MftSlack</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>The Get-MftSlack cmdlet returns a byte array representing the slack space found in Master File Table (MFT) records.

Each MFT File Record is 1024 bytes in size.  When a File Record does not allocate all 1024 bytes, the remaining bytes are considered &quot;slack&quot;. Slack space can be found by comparing the AllocatedSize and RealSize properties of a FileRecord object.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-MftSlack</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="">
					<maml:name>Index</maml:name>
					<maml:description>
						<maml:para>The index of the MFT entry to return MFT slack space for.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>VolumeName</maml:name>
					<maml:description>
						<maml:para>The name of the Volume or Logical Partition (Ex. \\.\C:, \\.\HARDDISKVOLUME1, or C).</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
					<dev:defaultValue>\\.\C:</dev:defaultValue>
				</command:parameter>
			</command:syntaxItem>
			<command:syntaxItem>
				<maml:name>Get-MftSlack</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="0" aliases="FullName">
					<maml:name>Path</maml:name>
					<maml:description>
						<maml:para>The path to the file to return MFT slack space for.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
			</command:syntaxItem>
			<command:syntaxItem>
				<maml:name>Get-MftSlack</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>MftPath</maml:name>
					<maml:description>
						<maml:para>Path to an exported Master File Table.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>VolumeName</maml:name>
				<maml:description>
					<maml:para>The name of the Volume or Logical Partition (Ex. \\.\C:, \\.\HARDDISKVOLUME1, or C).</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>\\.\C:</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="">
				<maml:name>Index</maml:name>
				<maml:description>
					<maml:para>The index of the MFT entry to return MFT slack space for.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
				<dev:type>
					<maml:name>Int32</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="0" aliases="FullName">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>The path to the file to return MFT slack space for.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>MftPath</maml:name>
				<maml:description>
					<maml:para>Path to an exported Master File Table.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para/>
				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<maml:description>
					<maml:para/>
				</maml:description>
				<dev:type>
					<maml:name>System.Byte[]</maml:name>
					<maml:uri/>
				</dev:type>
			</command:returnValue>
		</command:returnValues>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-NetworkList</command:name>
			<maml:description>
				<maml:para>Gets a list of networks that the system has previously been connected to.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>NetworkList</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>The Get-NetworkList cmdlet parses the SOFTWARE\Microsoft\Windows NT\CurrentVersion\NetworkList key to derive a list of previously connected networks.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-NetworkList</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="Path">
					<maml:name>HivePath</maml:name>
					<maml:description>
						<maml:para>Registry hive to parse.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
					<dev:defaultValue>C:\Windows\system32\config\SOFTWARE</dev:defaultValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="Path">
				<maml:name>HivePath</maml:name>
				<maml:description>
					<maml:para>Registry hive to parse.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>C:\Windows\system32\config\SOFTWARE</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>None</maml:name>
					<maml:uri/>
				</dev:type>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<maml:description>
					<maml:para/>
				</maml:description>
				<dev:type>
					<maml:name>PowerForensics.Artifacts.NetworkList</maml:name>
					<maml:uri/>
				</dev:type>
			</command:returnValue>
		</command:returnValues>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-NetworkList</dev:code>
				<dev:remarks>
					<maml:para>This example shows Get-NetworkList being run with no arguments. In this case it will parse the SOFTWARE hive on the C:\ logical volume.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-NetworkList -HivePath C:\evidence\SOFTWARE</dev:code>
				<dev:remarks>
					<maml:para>This example shows Get-NetworkList being run against an exported SOFTWARE hive.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-PartitionTable</command:name>
			<maml:description>
				<maml:para>Gets a list of partition objects on the specified disk.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>PartitionTable</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>The Get-PartitionTable cmdlet returns one or more Partition objects depending on the specified DrivePath.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-PartitionTable</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="DrivePath">
					<maml:name>Path</maml:name>
					<maml:description>
						<maml:para>Specified the physical drive to investigate. (Ex. \\.\PHYSICALDRIVE0)</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="DrivePath">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Specified the physical drive to investigate. (Ex. \\.\PHYSICALDRIVE0)</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>None</maml:name>
					<maml:uri/>
				</dev:type>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<maml:description>
					<maml:para/>
				</maml:description>
				<dev:type>
					<maml:name>PowerForensics.PartitionEntry[]</maml:name>
					<maml:uri/>
				</dev:type>
			</command:returnValue>
			<command:returnValue>
				<maml:description>
					<maml:para/>
				</maml:description>
				<dev:type>
					<maml:name>PowerForensics.GuidPartitionTableEntry[]</maml:name>
					<maml:uri/>
				</dev:type>
			</command:returnValue>
		</command:returnValues>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-PartitionTable -DrivePath \\.\PHYSICALDRIVE0


Bootable     SystemID     StartSector     EndSector
--------     --------     -----------     ---------
True         NTFS         2048            125827072</dev:code>
				<dev:remarks>
					<maml:para>This example returns all MBR partitions on the disk named \\.\PHYSICALDRIVE0.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-PartitionTable -Path \\.\PHYSICALDRIVE1

PartitionTypeGUID   : e3c9e316-0b5c-4db8-817d-f92df00215ae
UniquePartitionGUID : ff1a8a47-08f8-43ab-b410-53697f0b2323
StartingLBA         : 34
EndingLBA           : 65569
Attributes          : 0
PartitionName       : Microsoft reserved partition

PartitionTypeGUID   : ebd0a0a2-b9e5-4433-87c0-68b6b72699c7
UniquePartitionGUID : 6d76ae42-b6c1-4fbe-8d42-20cd366026b4
StartingLBA         : 67584
EndingLBA           : 2164735
Attributes          : 0
PartitionName       : Basic data partition

PartitionTypeGUID   : ebd0a0a2-b9e5-4433-87c0-68b6b72699c7
UniquePartitionGUID : d6795c3a-8a4d-4fb4-91a0-488812cce027
StartingLBA         : 2164736
EndingLBA           : 4261887
Attributes          : 0
PartitionName       : Basic data partition</dev:code>
				<dev:remarks>
					<maml:para>This example returns all GPT partitions on the disk named \\.\PHYSICALDRIVE1.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-Prefetch</command:name>
			<maml:description>
				<maml:para>Gets the Prefetch objects from the specified volume or file.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>Prefetch</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>The Get-Prefetch cmdlet parses the binary structure contained within the specified Prefech file. If a file is not specified, Get-Prefetch parses all .pf files in the C:\Windows\Prefetch directory.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-Prefetch</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="">
					<maml:name>VolumeName</maml:name>
					<maml:description>
						<maml:para>The name of the Volume or Logical Partition (Ex. \\.\C:, \\.\HARDDISKVOLUME1, or C).</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
					<dev:defaultValue>\\.\C:</dev:defaultValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>Fast</maml:name>
					<maml:description>
						<maml:para>Use the Windows API to list files within the C:\Windows\Prefetch directory. WARNING: Not forensically sound.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
			</command:syntaxItem>
			<command:syntaxItem>
				<maml:name>Get-Prefetch</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="FullName">
					<maml:name>Path</maml:name>
					<maml:description>
						<maml:para>Path to file to be parsed.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>Fast</maml:name>
					<maml:description>
						<maml:para>Use the Windows API to list files within the C:\Windows\Prefetch directory. WARNING: Not forensically sound.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="">
				<maml:name>VolumeName</maml:name>
				<maml:description>
					<maml:para>The name of the Volume or Logical Partition (Ex. \\.\C:, \\.\HARDDISKVOLUME1, or C).</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>\\.\C:</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>Fast</maml:name>
				<maml:description>
					<maml:para>Use the Windows API to list files within the C:\Windows\Prefetch directory. WARNING: Not forensically sound.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="FullName">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Path to file to be parsed.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>None</maml:name>
					<maml:uri/>
				</dev:type>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<maml:description>
					<maml:para/>
				</maml:description>
				<dev:type>
					<maml:name>PowerForensics.Artifacts.Prefetch</maml:name>
					<maml:uri/>
				</dev:type>
			</command:returnValue>
		</command:returnValues>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-Prefetch</dev:code>
				<dev:remarks>
					<maml:para>This example returns an array of all Prefetch files in the C:\Windows\Prefetch directory.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-Prefetch C:\Windows\Prefetch\CMD.EXE-89305D47.pf


Version            : WINDOWS_8
Name               : CMD.EXE
Path               : \DEVICE\HARDDISKVOLUME1\WINDOWS\SYSTEM32\CMD.EXE
PathHash           : 89305D47
DependencyCount    : 25
PrefetchAccessTime : {4/3/2015 4:29:25 AM, 4/3/2015 4:29:18 AM, 3/31/2015 12:33:17 PM, 3/31/2015 
                     12:22:42 PM...}
DeviceCount        : 1
RunCount           : 40</dev:code>
				<dev:remarks>
					<maml:para>This example parses the Prefetch file specified by the Path parameter.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-RegistryKey</command:name>
			<maml:description>
				<maml:para>Gets the keys of the specified registry hive.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>RegistryKey</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>The Get-RegistryKey cmdlet parses a registry hive and returns the specified key&apos;s subkeys.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-RegistryKey</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="Path">
					<maml:name>HivePath</maml:name>
					<maml:description>
						<maml:para>The registry hive to parse.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>Key</maml:name>
					<maml:description>
						<maml:para>The key to begin listing subkeys from.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
			</command:syntaxItem>
			<command:syntaxItem>
				<maml:name>Get-RegistryKey</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="Path">
					<maml:name>HivePath</maml:name>
					<maml:description>
						<maml:para>The registry hive to parse.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>Recurse</maml:name>
					<maml:description>
						<maml:para>Recursively list all keys in the specified hive.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="Path">
				<maml:name>HivePath</maml:name>
				<maml:description>
					<maml:para>The registry hive to parse.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>Key</maml:name>
				<maml:description>
					<maml:para>The key to begin listing subkeys from.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>Recurse</maml:name>
				<maml:description>
					<maml:para>Recursively list all keys in the specified hive.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>None</maml:name>
					<maml:uri/>
				</dev:type>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<maml:description>
					<maml:para/>
				</maml:description>
				<dev:type>
					<maml:name>PowerForensics.Registry.NamedKey</maml:name>
					<maml:uri/>
				</dev:type>
			</command:returnValue>
		</command:returnValues>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-RegistryValue</command:name>
			<maml:description>
				<maml:para>Gets the values of the specified registry key.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>RegistryValue</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>The Get-RegistryValue cmdlet parses a registry hive and returns the values of a specified key.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-RegistryValue</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="Path">
					<maml:name>HivePath</maml:name>
					<maml:description>
						<maml:para>The registry hive to parse.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>Key</maml:name>
					<maml:description>
						<maml:para>The key to list values from.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>Value</maml:name>
					<maml:description>
						<maml:para>The specific value to return.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="Path">
				<maml:name>HivePath</maml:name>
				<maml:description>
					<maml:para>The registry hive to parse.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>Key</maml:name>
				<maml:description>
					<maml:para>The key to list values from.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>Value</maml:name>
				<maml:description>
					<maml:para>The specific value to return.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>None</maml:name>
					<maml:uri/>
				</dev:type>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<maml:description>
					<maml:para/>
				</maml:description>
				<dev:type>
					<maml:name>PowerForensics.Registry.ValueKey</maml:name>
					<maml:uri/>
				</dev:type>
			</command:returnValue>
		</command:returnValues>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-ScheduledJob</command:name>
			<maml:description>
				<maml:para>Gets the scheduled jobs from the specified volume.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>ScheduledJob</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>The Get-ScheduledJob cmdlet parses the binary structure contained within the specified ScheduledJob file. If a file is not specified, Get-ScheduledJob parses all .job files in the C:\Windows\Tasks directory.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-ScheduledJob</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="">
					<maml:name>VolumeName</maml:name>
					<maml:description>
						<maml:para>The name of the Volume or Logical Partition (Ex. \\.\C:, \\.\HARDDISKVOLUME1, or C).</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
					<dev:defaultValue>\\.\C:</dev:defaultValue>
				</command:parameter>
			</command:syntaxItem>
			<command:syntaxItem>
				<maml:name>Get-ScheduledJob</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="FullName">
					<maml:name>Path</maml:name>
					<maml:description>
						<maml:para>Path to file to be parsed.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="">
				<maml:name>VolumeName</maml:name>
				<maml:description>
					<maml:para>The name of the Volume or Logical Partition (Ex. \\.\C:, \\.\HARDDISKVOLUME1, or C).</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>\\.\C:</dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="FullName">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Path to file to be parsed.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para/>
				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<maml:description>
					<maml:para/>
				</maml:description>
				<dev:type>
					<maml:name>PowerForensics.Artifacts.ScheduledJob</maml:name>
					<maml:uri/>
				</dev:type>
			</command:returnValue>
		</command:returnValues>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt; </maml:para>
				</maml:introduction>
				<dev:code>Get-ScheduledJob -Volume \\.\C:</dev:code>
				<dev:remarks>
					<maml:para>This example shows Get-ScheduledJob being run against the C:\ logical volume.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt; </maml:para>
				</maml:introduction>
				<dev:code>Get-ScheduledJob -Path C:\Windows\Tasks\GoogleUpdateTaskMachineUA.job


ProductVersion       : Windows8_1
FileVersion          : 1
Uuid                 : e841ef0f-7b64-45da-a8fb-1c3e05196ce1
ErrorRetryCount      : 0
ErrorRetryInterval   : 0
IdleDeadline         : 60
IdleWait             : 10
MaximumRuntime       : 4294967294
ExitCode             : 0
Status               : SCHED_S_TASK_READY
Flags                : RUN_ONLY_IF_DOCKED, KILL_IF_GOING_ON_BATTERIES, DISABLED
RunTime              : 11/17/2015 8:11:00 PM
RunningInstanceCount : 0
ApplicationName      : C:\Program Files\Google\Update\GoogleUpdate.exe
Parameters           : ?/ua /installsource scheduler
WorkingDirectory     :
Author               : ?WIN-OL5AKAF1OUJ\Uproot
Comment              : GKeeps your Google software up to date. If this task is disabled or stopped, your Google
                       software will not be kept up to date, meaning security vulnerabilities that may arise cannot be
                       fixed and features may not work. This task uninstalls itself when there is no Google software
                       using it.
StartTime            : 10/21/2015 8:11:00 AM</dev:code>
				<dev:remarks>
					<maml:para>This example shows Get-ScheduledJob being run against C:\Windows\Tasks\GoogleUpdateTaskMachineUA.job.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-ShellLink</command:name>
			<maml:description>
				<maml:para>Gets infromation about Shell Link (.LNK) files on the specified volume.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>ShellLink</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>The Get-ShellLink cmdlet parses the binary structure contained within the specified ShellLink (.lnk) file. If a file is not specified, Get-ShellLink parses all .lnk files in the specified volume.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-ShellLink</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="">
					<maml:name>VolumeName</maml:name>
					<maml:description>
						<maml:para>The name of the Volume or Logical Partition (Ex. \\.\C:, \\.\HARDDISKVOLUME1, or C).</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
					<dev:defaultValue>\\.\C:</dev:defaultValue>
				</command:parameter>
			</command:syntaxItem>
			<command:syntaxItem>
				<maml:name>Get-ShellLink</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="FullName">
					<maml:name>Path</maml:name>
					<maml:description>
						<maml:para>Path to file to be parsed.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="">
				<maml:name>VolumeName</maml:name>
				<maml:description>
					<maml:para>The name of the Volume or Logical Partition (Ex. \\.\C:, \\.\HARDDISKVOLUME1, or C).</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>\\.\C:</dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="FullName">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Path to file to be parsed.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>None</maml:name>
					<maml:uri/>
				</dev:type>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<maml:description>
					<maml:para/>
				</maml:description>
				<dev:type>
					<maml:name>PowerForensics.Artifacts.ShellLink</maml:name>
					<maml:uri/>
				</dev:type>
			</command:returnValue>
		</command:returnValues>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt; </maml:para>
				</maml:introduction>
				<dev:code>Get-ShellLink</dev:code>
				<dev:remarks>
					<maml:para>This example shows Get-ShellLink being run without any arguments. In this case, the cmdlet will return all .lnk files on the C:\ logical volume.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt; </maml:para>
				</maml:introduction>
				<dev:code>Get-ShellLink -Path C:\test\PowerForensics.dll-Help.xml.lnk


Path                      : PowerForensics.dll-Help.xml.lnk
CreationTime              : 11/6/2015 8:01:39 PM
AccessTime                : 11/16/2015 2:45:45 AM
WriteTime                 : 11/17/2015 10:18:59 PM
FileSize                  : 202700
LocalBasePath             : C:\test\PowerForensics.dll-Help.xml
CommandLineArguments      :
CommonNetworkRelativeLink :</dev:code>
				<dev:remarks>
					<maml:para>This example shows Get-ShellLink being run with a single file path as an argument returning just the corresponding ShellLink object.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-Sid</command:name>
			<maml:description>
				<maml:para>Gets the system&apos;s Security Identifier (SID).</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>Sid</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>The Get-Sid cmdlet parses the SAM hive to derive the system&apos;s Security Identifier.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-Sid</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="Path">
					<maml:name>HivePath</maml:name>
					<maml:description>
						<maml:para>Registry hive to parse.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
					<dev:defaultValue>C:\Windows\system32\config\SAM</dev:defaultValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="Path">
				<maml:name>HivePath</maml:name>
				<maml:description>
					<maml:para>Registry hive to parse.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>C:\Windows\system32\config\SAM</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>None</maml:name>
					<maml:uri/>
				</dev:type>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<maml:description>
					<maml:para/>
				</maml:description>
				<dev:type>
					<maml:name>System.Security.Principal.SecurityIdentifier</maml:name>
					<maml:uri/>
				</dev:type>
			</command:returnValue>
		</command:returnValues>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt; </maml:para>
				</maml:introduction>
				<dev:code>Get-Sid | fl

BinaryLength     : 24
AccountDomainSid : S-1-5-21-390730339-1025693957-1587674390
Value            : S-1-5-21-390730339-1025693957-1587674390</dev:code>
				<dev:remarks>
					<maml:para>This example shows Get-Sid being run with no arguments. By default, Get-Sid will parse the C:\Windows\system32\config\SAM hive.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-Sid -HivePath C:\Windows\System32\config\SAM

BinaryLength     : 24
AccountDomainSid : S-1-5-21-390730339-1025693957-1587674390
Value            : S-1-5-21-390730339-1025693957-1587674390</dev:code>
				<dev:remarks>
					<maml:para>This example shows Get-Sid being run with HivePath parameter. The HivePath parameter can specify an exported SAM hive to parse.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-Timezone</command:name>
			<maml:description>
				<maml:para>Gets the system&apos;s timezone.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>Timezone</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>The Get-Timezone cmdlet parses the SYSTEM hive to derive the system&apos;s current timezone.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-Timezone</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="Path">
					<maml:name>HivePath</maml:name>
					<maml:description>
						<maml:para>Registry hive to parse.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
					<dev:defaultValue>C:\Windows\system32\config\SYSTEM</dev:defaultValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="Path">
				<maml:name>HivePath</maml:name>
				<maml:description>
					<maml:para>Registry hive to parse.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>C:\Windows\system32\config\SYSTEM</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>None</maml:name>
					<maml:uri/>
				</dev:type>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<maml:description>
					<maml:para/>
				</maml:description>
				<dev:type>
					<maml:name>PowerForensics.Artifacts.Timezone</maml:name>
					<maml:uri/>
				</dev:type>
			</command:returnValue>
		</command:returnValues>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt; </maml:para>
				</maml:introduction>
				<dev:code>Get-Timezone

RegistryTimezone              dotNetStandardTimezone        dotNetDaylightTimezone                 IsDaylightSavingTime
----------------              ----------------------        ----------------------                 --------------------
Eastern Standard Time         Eastern Standard Time         Eastern Daylight Time                                 False</dev:code>
				<dev:remarks>
					<maml:para>This example shows Get-Timezone being run with no arguments.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt; </maml:para>
				</maml:introduction>
				<dev:code>Get-Timezone -HivePath C:\evidence\SYSTEM

RegistryTimezone              dotNetStandardTimezone        dotNetDaylightTimezone                 IsDaylightSavingTime
----------------              ----------------------        ----------------------                 --------------------
Eastern Standard Time         Eastern Standard Time         Eastern Daylight Time                                 False</dev:code>
				<dev:remarks>
					<maml:para>This example shows Get-Timezone being run against an exported SYSTEM hive.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-TypedUrl</command:name>
			<maml:description>
				<maml:para>Gets the Universal Resource Locators (URL) that have been typed in the Internet Explorer browser.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>TypedUrl</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>The Get-TypedUrl cmdlet parses a user&apos;s NTUSER.DAT file to derive the Universal Resource Locators (URL) that have been typed into the Internet Explorer browser application.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-TypedUrl</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="Path">
					<maml:name>HivePath</maml:name>
					<maml:description>
						<maml:para>Registry hive to parse. This should be a NTUSER.DAT registry hive.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="Path">
				<maml:name>HivePath</maml:name>
				<maml:description>
					<maml:para>Registry hive to parse. This should be a NTUSER.DAT registry hive.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>None</maml:name>
					<maml:uri/>
				</dev:type>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<maml:description>
					<maml:para/>
				</maml:description>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
			</command:returnValue>
		</command:returnValues>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt; </maml:para>
				</maml:introduction>
				<dev:code>Get-TypedUrl -HivePath C:\Users\Public\NTUSER.DAT</dev:code>
				<dev:remarks>
					<maml:para>This example shows Get-TypedUrl being run against the C:\Users\Public\NTUSER.DAT hive.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-UnallocatedSpace</command:name>
			<maml:description>
				<maml:para>Gets the unallocated space on the specified partition/volume.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>UnallocatedSpace</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>The Get-UnallocatedSpace cmdlet parses the $Bitmap file to find clusters that are marked as unallocated (not in use by the file system). The cmdlet then reads the data in the corresponding unallocated cluster and adds that data to a byte array that is returned upon completion.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-UnallocatedSpace</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="">
					<maml:name>VolumeName</maml:name>
					<maml:description>
						<maml:para>The name of the Volume or Logical Partition (Ex. \\.\C:, \\.\HARDDISKVOLUME1, or C).</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
					<dev:defaultValue>\\.\C:</dev:defaultValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="">
				<maml:name>VolumeName</maml:name>
				<maml:description>
					<maml:para>The name of the Volume or Logical Partition (Ex. \\.\C:, \\.\HARDDISKVOLUME1, or C).</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>\\.\C:</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>None</maml:name>
					<maml:uri/>
				</dev:type>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<maml:description>
					<maml:para/>
				</maml:description>
				<dev:type>
					<maml:name>System.Byte[]</maml:name>
					<maml:uri/>
				</dev:type>
			</command:returnValue>
		</command:returnValues>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt; </maml:para>
				</maml:introduction>
				<dev:code>Get-UnallocatedSpace -VolumeName \\.\Z:</dev:code>
				<dev:remarks>
					<maml:para>This example shows Get-Unallocated space being run against the \\.\Z: volume</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-UserAssist</command:name>
			<maml:description>
				<maml:para>Gets the UserAssist entries from the specified volume.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>UserAssist</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>The Get-UserAssis cmdlet parses the NTUSER.DAT registry hive to derive applications that were recently used by a specific user.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-UserAssist</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="Path">
					<maml:name>HivePath</maml:name>
					<maml:description>
						<maml:para>Registry hive to parse. This should be a NTUSER.DAT registry hive.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="Path">
				<maml:name>HivePath</maml:name>
				<maml:description>
					<maml:para>Registry hive to parse. This should be a NTUSER.DAT registry hive.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>None</maml:name>
					<maml:uri/>
				</dev:type>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<maml:description>
					<maml:para/>
				</maml:description>
				<dev:type>
					<maml:name>PowerForensics.Artifacts.UserAssist</maml:name>
					<maml:uri/>
				</dev:type>
			</command:returnValue>
		</command:returnValues>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt; </maml:para>
				</maml:introduction>
				<dev:code>Get-UserAssist -HivePath C:\Users\Public\NTUSER.DAT</dev:code>
				<dev:remarks>
					<maml:para>This example shows Get-UserAssist being run against the C:\Users\Public\NTUSER.DAT hive.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-UsnJrnl</command:name>
			<maml:description>
				<maml:para>Gets the UsnJrnl entries from the specified volume.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>UsnJrnl</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>The Get-UsnJrnl cmdlet parses the $UsnJrnl file&apos;s $J data stream to return UsnJrnl entries. If a Usn value is not provided then all entries in the $UsnJrnl will be returned.

The $UsnJrnl file maintains a record of all file system operations that have occurred. The file is circular, so over time entries will be overwritten.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-UsnJrnl</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="">
					<maml:name>VolumeName</maml:name>
					<maml:description>
						<maml:para>The name of the Volume or Logical Partition (Ex. \\.\C:, \\.\HARDDISKVOLUME1, or C).</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
					<dev:defaultValue>\\.\C:</dev:defaultValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>Usn</maml:name>
					<maml:description>
						<maml:para>The Update Sequence Number of the record to return.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">UInt64</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
			</command:syntaxItem>
			<command:syntaxItem>
				<maml:name>Get-UsnJrnl</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="FullName">
					<maml:name>Path</maml:name>
					<maml:description>
						<maml:para>Path to file to be parsed.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>Usn</maml:name>
					<maml:description>
						<maml:para>The Update Sequence Number of the record to return.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">UInt64</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="">
				<maml:name>VolumeName</maml:name>
				<maml:description>
					<maml:para>The name of the Volume or Logical Partition (Ex. \\.\C:, \\.\HARDDISKVOLUME1, or C).</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>\\.\C:</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>Usn</maml:name>
				<maml:description>
					<maml:para>The Update Sequence Number of the record to return.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">UInt64</command:parameterValue>
				<dev:type>
					<maml:name>UInt64</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="FullName">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Path to file to be parsed.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para/>
				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<maml:description>
					<maml:para/>
				</maml:description>
				<dev:type>
					<maml:name>PowerForensics.Ntfs.UsnJrnl</maml:name>
					<maml:uri/>
				</dev:type>
			</command:returnValue>
		</command:returnValues>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt; </maml:para>
				</maml:introduction>
				<dev:code>$usn = Get-UsnJrnl</dev:code>
				<dev:remarks>
					<maml:para>This example shows Get-UsnJrnl being run against the $UsnJrnl file on the C:\ logical volume.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt; </maml:para>
				</maml:introduction>
				<dev:code>$r = Get-FileRecord C:\temp\helloworld.txt
PS C:\&gt; $r.Attribute[0].UpdateSequenceNumber
713538320
PS C:\&gt; Get-UsnJrnl -Usn $r.Attribute[0].UpdateSequenceNumber

VolumePath               : \\.\C:
Version                  : 2.0
RecordNumber             : 132245
FileSequenceNumber       : 52
ParentFileRecordNumber   : 191621
ParentFileSequenceNumber : 59
Usn                      : 713538320
TimeStamp                : 11/17/2015 10:02:56 PM
Reason                   : DATA_EXTEND, FILE_CREATE, CLOSE
SourceInfo               : 0
SecurityId               : 0
FileAttributes           : ARCHIVE
FileName                 : helloworld.txt</dev:code>
				<dev:remarks>
					<maml:para>This example shows Get-UsnJrnl being used to get a specific UsnJrnl entry. A file&apos;s most recent entry number can be found in its FileRecord&apos;s $STANDARD_INFORMATION attribute.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-UsnJrnl -Path C:\evidence\UsnJrnl</dev:code>
				<dev:remarks>
					<maml:para>This example shows Get-UsnJrnl parsing an exported UsnJrnl file.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-UsnJrnlInformation</command:name>
			<maml:description>
				<maml:para>Gets metadata about the specified volume&apos;s $UsnJrnl.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>UsnJrnlInformation</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>The Get-UsnJrnlInformation cmdlet parses the $UsnJrnl file&apos;s $MAX data stream to return metadata about the UsnJrnl&apos;s configuration.

By default the cmdlet will parse the $UsnJrnl file on the C:\ drive. The target drive can be changed with the -VolumeName parameter, or an exported $UsnJrnl file can be used with the -Path parameter.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-UsnJrnlInformation</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="">
					<maml:name>VolumeName</maml:name>
					<maml:description>
						<maml:para>The name of the Volume or Logical Partition (Ex. \\.\C:, \\.\HARDDISKVOLUME1, or C).</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
					<dev:defaultValue>\\.\C:</dev:defaultValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>AsBytes</maml:name>
					<maml:description>
						<maml:para>Returns the $UsnJrnl $Max data stream as byte array instead of as a UsnJrnlDetail object.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
			</command:syntaxItem>
			<command:syntaxItem>
				<maml:name>Get-UsnJrnlInformation</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="FullName">
					<maml:name>Path</maml:name>
					<maml:description>
						<maml:para>Path to file to be parsed.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>AsBytes</maml:name>
					<maml:description>
						<maml:para>Returns the $UsnJrnl $Max data stream as byte array instead of as a UsnJrnlDetail object.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="">
				<maml:name>VolumeName</maml:name>
				<maml:description>
					<maml:para>The name of the Volume or Logical Partition (Ex. \\.\C:, \\.\HARDDISKVOLUME1, or C).</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>\\.\C:</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>AsBytes</maml:name>
				<maml:description>
					<maml:para>Returns the $UsnJrnl $Max data stream as byte array instead of as a UsnJrnlDetail object.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="FullName">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Path to file to be parsed.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para/>
				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<maml:description>
					<maml:para/>
				</maml:description>
				<dev:type>
					<maml:name>PowerForensics.Ntfs.UsnJrnlDetail</maml:name>
					<maml:uri/>
				</dev:type>
			</command:returnValue>
			<command:returnValue>
				<dev:type>
					<maml:name>System.Byte</maml:name>
					<maml:uri/>
				</dev:type>
			</command:returnValue>
		</command:returnValues>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt; </maml:para>
				</maml:introduction>
				<dev:code>Get-UsnJrnlInformation

   MaxSize    AllocationDelta                 UsnId
   -------    ---------------                 -----
  33554432            8388608    130547872109887937</dev:code>
				<dev:remarks>
					<maml:para>This example shows Get-UsnJrnlInformation being run against the C:\ logical volume.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt; </maml:para>
				</maml:introduction>
				<dev:code>Get-UsnJrnlInformation -Path C:\evidence\UsnJrnl

   MaxSize    AllocationDelta                 UsnId
   -------    ---------------                 -----
  33554432            8388608    130547872109887937</dev:code>
				<dev:remarks>
					<maml:para>This example shows Get-UsnJrnlInformation being run against an exported UsnJrnl file.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-UsnJrnlInformation -AsBytes | Format-Hex

Offset     _00_01_02_03_04_05_06_07_08_09_0A_0B_0C_0D_0E_0F  Ascii
------     ------------------------------------------------  -----
0x00000000  00 00 00 02 00 00 00 00 00 00 80 00 00 00 00 00  ................
0x00000010  C1 01 4B 17 99 CC CF 01 00 00 00 00 00 00 00 00  ..K.............</dev:code>
				<dev:remarks>
					<maml:para>This example shows Get-UsnJrnlInformation being run with the AsBytes parameter to return the $Max data stream as a byte array.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-VolumeBootRecord</command:name>
			<maml:description>
				<maml:para>Gets the Volume Boot Record from the specified volume.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>VolumeBootRecord</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>The Get-VolumeBootRecord reads the first 512 bytes (first sector) of the Logical Volume, also known as the Volume Boot Record, and parses its data structure to return a VolumeBootRecord object.

By default the cmdlet will parse the $Boot file on the C:\ drive. The target drive can be changed with the -VolumeName parameter, or an exported $Boot file can be used with the -Path parameter.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-VolumeBootRecord</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="">
					<maml:name>VolumeName</maml:name>
					<maml:description>
						<maml:para>The name of the Volume or Logical Partition (Ex. \\.\C:, \\.\HARDDISKVOLUME1, or C).</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
					<dev:defaultValue>\\.\C:</dev:defaultValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>AsBytes</maml:name>
					<maml:description>
						<maml:para>Returns Volume Boot Record as byte array instead of as VolumeBootRecord object.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
			<command:syntaxItem>
				<maml:name>Get-VolumeBootRecord</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="FullName">
					<maml:name>Path</maml:name>
					<maml:description>
						<maml:para/>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>AsBytes</maml:name>
					<maml:description>
						<maml:para>Returns Volume Boot Record as byte array instead of as VolumeBootRecord object.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="">
				<maml:name>VolumeName</maml:name>
				<maml:description>
					<maml:para>The name of the Volume or Logical Partition (Ex. \\.\C:, \\.\HARDDISKVOLUME1, or C).</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>\\.\C:</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AsBytes</maml:name>
				<maml:description>
					<maml:para>Returns Volume Boot Record as byte array instead of as VolumeBootRecord object.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>False</dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="FullName">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para/>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>None</maml:name>
					<maml:uri/>
				</dev:type>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<maml:description>
					<maml:para/>
				</maml:description>
				<dev:type>
					<maml:name>PowerForensics.Ntfs.VolumeBootRecord</maml:name>
					<maml:uri/>
				</dev:type>
			</command:returnValue>
			<command:returnValue>
				<dev:type>
					<maml:name>None</maml:name>
					<maml:uri/>
				</dev:type>
			</command:returnValue>
		</command:returnValues>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-VolumeBootRecord -VolumeName C


Signature             : NTFS    
BytesPerSector        : 512
SectorsPerCluster     : 8
ReservedSectors       : 0
MediaDescriptor       : 248
SectorsPerTrack       : 63
NumberOfHeads         : 255
HiddenSectors         : 2048
TotalSectors          : 125825023
LCN_MFT               : 786432
LCN_MFTMirr           : 2
ClustersPerFileRecord : 246
ClustersPerIndexBlock : 1
VolumeSN              : E3133CD4233CD4CA
Code                  : {0, 0, 0, 0...}</dev:code>
				<dev:remarks>
					<maml:para>This example shows how to get the VolumeBootRecord object for the C drive.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt; </maml:para>
				</maml:introduction>
				<dev:code>(Get-VolumeBootRecord -VolumeName \\.\C: -AsBytes) | Format-Hex

Offset     _00_01_02_03_04_05_06_07_08_09_0A_0B_0C_0D_0E_0F  Ascii
------     ------------------------------------------------  -----
0x00000000  EB 52 90 4E 54 46 53 20 20 20 20 00 02 08 00 00  .R.NTFS    .....
0x00000010  00 00 00 00 00 F8 00 00 3F 00 FF 00 00 08 00 00  ........?.......
0x00000020  00 00 00 00 80 00 80 00 FF EF 7F 07 00 00 00 00  ................
0x00000030  00 00 0C 00 00 00 00 00 02 00 00 00 00 00 00 00  ................
0x00000040  F6 00 00 00 01 00 00 00 E3 13 3C D4 23 3C D4 CA  ..........&lt;.#&lt;..
0x00000050  00 00 00 00 FA 33 C0 8E D0 BC 00 7C FB 68 C0 07  .....3.....|.h..
0x00000060  1F 1E 68 66 00 CB 88 16 0E 00 66 81 3E 03 00 4E  ..hf......f.&gt;..N
0x00000070  54 46 53 75 15 B4 41 BB AA 55 CD 13 72 0C 81 FB  TFSu..A..U..r...
0x00000080  55 AA 75 06 F7 C1 01 00 75 03 E9 DD 00 1E 83 EC  U.u.....u.......
0x00000090  18 68 1A 00 B4 48 8A 16 0E 00 8B F4 16 1F CD 13  .h...H..........
0x000000A0  9F 83 C4 18 9E 58 1F 72 E1 3B 06 0B 00 75 DB A3  .....X.r.;...u..
0x000000B0  0F 00 C1 2E 0F 00 04 1E 5A 33 DB B9 00 20 2B C8  ........Z3... +.
0x000000C0  66 FF 06 11 00 03 16 0F 00 8E C2 FF 06 16 00 E8  f...............
0x000000D0  4B 00 2B C8 77 EF B8 00 BB CD 1A 66 23 C0 75 2D  K.+.w......f#.u-
0x000000E0  66 81 FB 54 43 50 41 75 24 81 F9 02 01 72 1E 16  f..TCPAu$....r..
0x000000F0  68 07 BB 16 68 52 11 16 68 09 00 66 53 66 53 66  h...hR..h..fSfSf
0x00000100  55 16 16 16 68 B8 01 66 61 0E 07 CD 1A 33 C0 BF  U...h..fa....3..
0x00000110  0A 13 B9 F6 0C FC F3 AA E9 FE 01 90 90 66 60 1E  .............f`.
0x00000120  06 66 A1 11 00 66 03 06 1C 00 1E 66 68 00 00 00  .f...f.....fh...
0x00000130  00 66 50 06 53 68 01 00 68 10 00 B4 42 8A 16 0E  .fP.Sh..h...B...
0x00000140  00 16 1F 8B F4 CD 13 66 59 5B 5A 66 59 66 59 1F  .......fY[ZfYfY.
0x00000150  0F 82 16 00 66 FF 06 11 00 03 16 0F 00 8E C2 FF  ....f...........
0x00000160  0E 16 00 75 BC 07 1F 66 61 C3 A1 F6 01 E8 09 00  ...u...fa.......
0x00000170  A1 FA 01 E8 03 00 F4 EB FD 8B F0 AC 3C 00 74 09  ............&lt;.t.
0x00000180  B4 0E BB 07 00 CD 10 EB F2 C3 0D 0A 41 20 64 69  ............A di
0x00000190  73 6B 20 72 65 61 64 20 65 72 72 6F 72 20 6F 63  sk read error oc
0x000001A0  63 75 72 72 65 64 00 0D 0A 42 4F 4F 54 4D 47 52  curred...BOOTMGR
0x000001B0  20 69 73 20 63 6F 6D 70 72 65 73 73 65 64 00 0D   is compressed..
0x000001C0  0A 50 72 65 73 73 20 43 74 72 6C 2B 41 6C 74 2B  .Press Ctrl+Alt+
0x000001D0  44 65 6C 20 74 6F 20 72 65 73 74 61 72 74 0D 0A  Del to restart..
0x000001E0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
0x000001F0  00 00 00 00 00 00 8A 01 A7 01 BF 01 00 00 55 AA  ..............U.
				</dev:code>
				<dev:remarks>
					<maml:para>This example shows how to return the bytes that represent the Volume Boot Record as a byte array.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-VolumeInformation</command:name>
			<maml:description>
				<maml:para>Gets information about the specified volume.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>VolumeInformation</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>The Get-VolumeInformation cmdlet parses the $Volume file&apos;s $VOLUME_INFORMATION attribute to return the metadata about the specified volume.

By default the cmdlet will parse the $Volume file on the C:\ drive. The target drive can be changed with the -VolumeName parameter, or an exported $Volume file can be used with the -Path parameter.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-VolumeInformation</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="">
					<maml:name>VolumeName</maml:name>
					<maml:description>
						<maml:para>The name of the Volume or Logical Partition (Ex. \\.\C:, \\.\HARDDISKVOLUME1, or C).</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
					<dev:defaultValue>\\.\C:</dev:defaultValue>
				</command:parameter>
			</command:syntaxItem>
			<command:syntaxItem>
				<maml:name>Get-VolumeInformation</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="FullName">
					<maml:name>Path</maml:name>
					<maml:description>
						<maml:para>Path to file to be parsed.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="">
				<maml:name>VolumeName</maml:name>
				<maml:description>
					<maml:para>The name of the Volume or Logical Partition (Ex. \\.\C:, \\.\HARDDISKVOLUME1, or C).</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>\\.\C:</dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="FullName">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Path to file to be parsed.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para/>
				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<maml:description>
					<maml:para/>
				</maml:description>
				<dev:type>
					<maml:name>PowerForensics.Ntfs.VolumeInformation</maml:name>
					<maml:uri/>
				</dev:type>
			</command:returnValue>
		</command:returnValues>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt; </maml:para>
				</maml:introduction>
				<dev:code>Get-VolumeInformation

Name    : VOLUME_INFORMATION
Version : 3.1
Flags   : 0</dev:code>
				<dev:remarks>
					<maml:para>This example shows Get-VolumeInformation being run against the C:\ logical volume.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt; </maml:para>
				</maml:introduction>
				<dev:code>Get-VolumeInformation -Path &apos;C:\evidence\$Volume&apos;</dev:code>
				<dev:remarks>
					<maml:para>This example shows Get-VolumeName being run against the C:\evidence\$Volume file.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-VolumeName</command:name>
			<maml:description>
				<maml:para>Gets the name of the specified volume.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>VolumeName</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>The Get-VolumeName cmdlet parses the $Volume file&apos;s $VOLUME_NAME attribute to return the name of the specified volume.

By default the cmdlet will parse the $Volume file on the C:\ drive. The target drive can be changed with the -VolumeName parameter, or an exported $Volume file can be used with the -Path parameter.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-VolumeName</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="">
					<maml:name>VolumeName</maml:name>
					<maml:description>
						<maml:para>The name of the Volume or Logical Partition (Ex. \\.\C:, \\.\HARDDISKVOLUME1, or C).</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
					<dev:defaultValue>\\.\C:</dev:defaultValue>
				</command:parameter>
			</command:syntaxItem>
			<command:syntaxItem>
				<maml:name>Get-VolumeName</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="FullName">
					<maml:name>Path</maml:name>
					<maml:description>
						<maml:para>Path to file to be parsed.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="">
				<maml:name>VolumeName</maml:name>
				<maml:description>
					<maml:para>The name of the Volume or Logical Partition (Ex. \\.\C:, \\.\HARDDISKVOLUME1, or C).</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>\\.\C:</dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="FullName">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Path to file to be parsed.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para/>
				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<maml:description>
					<maml:para/>
				</maml:description>
				<dev:type>
					<maml:name>PowerForensics.Ntfs.VolumeName</maml:name>
					<maml:uri/>
				</dev:type>
			</command:returnValue>
		</command:returnValues>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt; </maml:para>
				</maml:introduction>
				<dev:code>Get-VolumeName -VolumeName \\.\C:

VolumeNameString
----------------
testdrive</dev:code>
				<dev:remarks>
					<maml:para>This example shows Get-VolumeName being run against the C:\ logical volume.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-VolumeName -Path &apos;C:\evidence\$Volume&apos;

VolumeNameString
----------------
testdrive</dev:code>
				<dev:remarks>
					<maml:para>This example shows Get-VolumeName being run against the C:\evidence\$Volume file.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Invoke-DD</command:name>
			<maml:description>
				<maml:para>Make a byte for byte copy of a file, disk, or partition.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Invoke</command:verb>
			<command:noun>DD</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>The Invoke-DD cmdlet functions in the same manner as the popular dd utility. This cmdlet will make an exact clone of a file, and output it to the specified OutFile.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Invoke-DD</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>InFile</maml:name>
					<maml:description>
						<maml:para>The file to read from. (Ex. \\.\PHYSICALDRIVE0, \\.\HARDDISKVOLUME1, or \\.\C:)</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>OutFile</maml:name>
					<maml:description>
						<maml:para>The file to write the copied bytes to.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>Offset</maml:name>
					<maml:description>
						<maml:para>The byte offset to begin reading from.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">UInt64</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>BlockSize</maml:name>
					<maml:description>
						<maml:para>The number of bytes to read/write at a time. If reading from a device (Ex. \\.\PHYSICALDRIVE0 or \\.\C:) BlockSize must be divisible by 512 (1 sector). The size of The default value is 512.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">UInt32</command:parameterValue>
					<dev:defaultValue>512</dev:defaultValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>Count</maml:name>
					<maml:description>
						<maml:para>The number of blocks to read from &quot;InFile&quot;.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">UInt32</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>InFile</maml:name>
				<maml:description>
					<maml:para>The file to read from. (Ex. \\.\PHYSICALDRIVE0, \\.\HARDDISKVOLUME1, or \\.\C:)</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>OutFile</maml:name>
				<maml:description>
					<maml:para>The file to write the copied bytes to.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Offset</maml:name>
				<maml:description>
					<maml:para>The byte offset to begin reading from.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">UInt64</command:parameterValue>
				<dev:type>
					<maml:name>UInt64</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>BlockSize</maml:name>
				<maml:description>
					<maml:para>The number of bytes to read/write at a time. If reading from a device (Ex. \\.\PHYSICALDRIVE0 or \\.\C:) BlockSize must be divisible by 512 (1 sector). The size of The default value is 512.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">UInt32</command:parameterValue>
				<dev:type>
					<maml:name>UInt32</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>512</dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Count</maml:name>
				<maml:description>
					<maml:para>The number of blocks to read from &quot;InFile&quot;.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">UInt32</command:parameterValue>
				<dev:type>
					<maml:name>UInt32</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>None</maml:name>
					<maml:uri/>
				</dev:type>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<maml:description>
					<maml:para/>
				</maml:description>
				<dev:type>
					<maml:name>System.Byte[]</maml:name>
					<maml:uri/>
				</dev:type>
			</command:returnValue>
		</command:returnValues>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Invoke-DD -InFile \\.\PHYSICALDRIVE0 -OutFile C:\Users\Public\Desktop\MBR -Offset 0 -BlockSize 512 -Count 1</dev:code>
				<dev:remarks>
					<maml:para>This example shows Invoke-DD being used to copy the first 512 bytes (first sector or the Master Boot Record) from the disk \\.\PHYSICALDRIVE0 and outputting it to the path specified by the OutFile parameter.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Invoke-ForensicTimeline</command:name>
			<maml:description>
				<maml:para>Creates a forensic timeline.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Invoke</command:verb>
			<command:noun>ForensicTimeline</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>The Invoke-ForensicTimeline cmdlet is a meta command that executes a number of PowerForensics cmdlets in the background and returns the results in the unified ForensicTimeline format. Example data gathered by Invoke-ForensicTimeline includes MFT FileRecord, Registry Keys, Amcache, Event Logs, and much more.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Invoke-ForensicTimeline</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="">
					<maml:name>VolumeName</maml:name>
					<maml:description>
						<maml:para>The name of the Volume or Logical Partition (Ex. \\.\C:, \\.\HARDDISKVOLUME1, or C).</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="">
				<maml:name>VolumeName</maml:name>
				<maml:description>
					<maml:para>The name of the Volume or Logical Partition (Ex. \\.\C:, \\.\HARDDISKVOLUME1, or C).</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>None</maml:name>
					<maml:uri/>
				</dev:type>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<maml:description>
					<maml:para/>
				</maml:description>
				<dev:type>
					<maml:name>PowerForensics.Formats.ForensicTimeline</maml:name>
					<maml:uri/>
				</dev:type>
			</command:returnValue>
		</command:returnValues>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Invoke-ForensicTimeline -VolumeName \\.\C:</dev:code>
				<dev:remarks>
					<maml:para>This example shows Invoke-ForensicTimeline being run against the C:\ logical volume.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<!--Generated by: SAPIEN PowerShell HelpWriter 2015 v1.0.11-->
</helpItems>